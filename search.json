[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Quarto for Scientists",
    "section": "",
    "text": "About this\nThis is a book on using Quarto for writing and document preparation, aimed for scientists. It was initially developed as a 3 hour workshop, “Rmarkdown for scientists”. This focusses on Quarto, which is a next-generation rmarkdown. It is now developed into a resource that will grow and change over time as a living book.\nThis book aims to teach the following:",
    "crumbs": [
      "About this"
    ]
  },
  {
    "objectID": "index.html#why-write-this-as-a-book",
    "href": "index.html#why-write-this-as-a-book",
    "title": "Quarto for Scientists",
    "section": "Why write this as a book?",
    "text": "Why write this as a book?\nThis book started out its first life being around rmarkdown. There are many great books on R Markdown and it’s various features, such as “Rmarkdown: The definitive guide”, “bookdown: Authoring Books and Technical Documents with R Markdown”, and “Dynamic Documents with R and knitr, Second edition”, and Yihui Xie’s thesis, “Dynamic Graphics and Reporting for Statistics”.\nWith the release of Quarto, I wanted to translate the materials I developed in “Rmarkdown for scientists” to cover the same material. Here are some resources that I really liked for learning Quarto:\n\nThe Quarto “get started” guide\nThe Quarto guide “Quarto manuscripts”\nThe Quarto chapter in “R for data science”\nMaking shareable documents with Quarto from, from OpenScapes\nAlison Hill’s blog post: “we don’t talk about Quarto”\nMine Çentinkaya-Rundel’s talk “Quarto for academics”\n\nWhile the Quarto guide is extensive, and indeed their “Quarto manuscripts” guide covers a lot of the ground in this book.\n\nSo, why write a book?\n\nGood question. The answer is that writing this as a book provides a nice way to structure the content in the form of a workshop, in a way suitable for learning in a few hours. It is not to say that there aren’t already great resources out there; there are. It is instead adding to the list of other useful information out there on the internet. I considered the Rmarkdown for Scientsts book and course a success, and it helped myself and others understand and better use rmarkdown. So I guess, to answer a question with another question:\n\nWhy NOT write this as a book?",
    "crumbs": [
      "About this"
    ]
  },
  {
    "objectID": "index.html#how-to-use-this-book",
    "href": "index.html#how-to-use-this-book",
    "title": "Quarto for Scientists",
    "section": "How to use this book",
    "text": "How to use this book\nThis book was written to provide course materials for a 3 hour course on Quarto\nWe worked through the following sections in the book in 3 hours:\n\nwhy use Quarto\ninstallation\nwhat is RStudio?\nsuggested workflow and hygiene\nhow to use Quarto\nusing Quarto with pdf, html, and Word\nwhat are some useful keyboard shortcuts\nadding captions to tables and figures\nchanging figures\nadding mathematics\nciting figures and tables\nchanging citations and styles\n\nWith the remaining sections being used as extra material, or have since been written after the course:\n\nfixing some common problems in Quarto\nwhat are some alternative outputs of Quarto?\nwhere to go next?\nsuggested references\n\nCourse materials can be downloaded by using the following command from the usethis package:\n\nusethis::use_course(\"njtierney/qmd4sci-materials\")",
    "crumbs": [
      "About this"
    ]
  },
  {
    "objectID": "index.html#licence",
    "href": "index.html#licence",
    "title": "Quarto for Scientists",
    "section": "Licence",
    "text": "Licence\nThis work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.",
    "crumbs": [
      "About this"
    ]
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "License",
    "section": "",
    "text": "This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.",
    "crumbs": [
      "License"
    ]
  },
  {
    "objectID": "why-qmd.html",
    "href": "why-qmd.html",
    "title": "1  Why Quarto",
    "section": "",
    "text": "1.1 Overview\nThe goal of this section is to briefly discuss why we want to learn Quarto, the benefits, and the barriers to using it.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#overview",
    "href": "why-qmd.html#overview",
    "title": "1  Why Quarto",
    "section": "",
    "text": "Teaching 3 minutes\nExercises 5 minutes",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#questions",
    "href": "why-qmd.html#questions",
    "title": "1  Why Quarto",
    "section": "1.2 Questions",
    "text": "1.2 Questions\n\nWhat is the value in a reproducible report?\nWhat is Markdown?\nCan I combine my software and my writing?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#objectives",
    "href": "why-qmd.html#objectives",
    "title": "1  Why Quarto",
    "section": "1.3 Objectives",
    "text": "1.3 Objectives\n\nLearn how to use Markdown\nThink about why you want to use Markdown\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nWhy are we here Form small groups of 2-4 with your neighbours and discuss how you expect learning Quarto might benefit you.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#reproducibility-is-a-problem",
    "href": "why-qmd.html#reproducibility-is-a-problem",
    "title": "1  Why Quarto",
    "section": "1.4 Reproducibility is a problem",
    "text": "1.4 Reproducibility is a problem\nIt is unfortunately a common, seemingly evergreen problem that a lot of people cannot reproduce scientific work. This might appear to be a “current” problem, but it has indeed been a problem throughout a lot of scientific history. To illustrate this, here’s a nice article by Rich FitzJohn, Reproducible research is still a challenge, which was written 10 years ago, in 2014, and provides a list of the challenges and lessons learned in making research reproducible. The list is still relevant. This problem isn’t completely solved. But, we can make it easier to solve, to get further.\nReproducibility isn’t just something that impacts a few people, and it’s not cheap. A 2010 estimate stated that in the biomedical industry, in the USA, irreproducibility (not being able to reproduce a given piece of work) costs $28 Billion dollars annually 1. That was one country, one field, and one year.\nSo what can we do about it?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#literate-programming-is-a-partial-solution",
    "href": "why-qmd.html#literate-programming-is-a-partial-solution",
    "title": "1  Why Quarto",
    "section": "1.5 Literate programming is a partial solution",
    "text": "1.5 Literate programming is a partial solution\nThe idea of literate programming shines some light on this dark area of science. This is an idea from Donald Knuth where you combine your text with your code output to create a document. This is a blend of your literature (text), and your programming (code), to create something that you can read from top to bottom. Imagine your paper - the introduction, methods, results, discussion, and conclusion, and all the bits of code that make each section. With Quarto, you can see all the pieces of your data analysis all together.\n\n\n\n\n\n\nSome history: Quarto, Rmarkdown, Sweave\n\n\n\n\n\nLiterate programming was a popular idea, and it has had some interesting discussion and contributions over the years. Notably, in the R ecosystem, the Sweave, (The S language + weaving together text and code) program provided a way to write text and code together. As with any technology, there were some speedbumps with using Sweave, and some of the reasons we are not teaching it now is because:\n\nIt uses a form of LaTeX, which provides great flexibility at the cost of complexity.\nPrinting figures involves additional work\nThere isn’t a way to save (cache) your work. Every analysis has to be repeated from start to finish. This was time consuming.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#markdown-as-a-new-player-to-legibility",
    "href": "why-qmd.html#markdown-as-a-new-player-to-legibility",
    "title": "1  Why Quarto",
    "section": "1.6 Markdown as a new player to legibility",
    "text": "1.6 Markdown as a new player to legibility\nIn 2004, John Gruber, of daring fireball created Markdown, a simple way to create text that rendered into an HTML webpage. The core idea was that you could write plain text (not text inside a MS Word/WordPerfect/Pages/Proprietary Format Document), and it would look readable, then get rendered into HTML.\nThe idea took off.\n\n1.6.1 A brief example of markdown\n- bullet list\n- bullet list\n- bullet list\n\n1. numbered list\n2. numbered list\n3. numbered list\n\n__bold__, **bold**, _italic_, *italic*\n\n&gt; quote of something profound\n\n```r\n# computer code goes in three back ticks\n1 + 1\n2 + 2\nimage(volcano)\n```\nWould be converted to:\n\nbullet list\nbullet list\nbullet list\n\n\nnumbered list\nnumbered list\nnumbered list\n\nbold, bold, italic, italic\n\nquote of something profound\n\n\n# computer code goes in three back ticks\n1 + 1\n\n[1] 2\n\n2 + 2\n\n[1] 4\n\nimage(volcano)\n\n\n\n\n\n\n\n\nWith very little marking up, we can create rich text, that actually resembles the text that we want to see.\nSome other nice features of Markdown include:\n\n\n\nFeature\nMarkdown | rendered\n\n\n\n\n\nsuperscript\n2^nd^ | 2nd\n\n\n\nsubscript\nCO~2~ | CO2\n\n\n\nstrikethrough\n~~mistake~~ | mistake\n\n\n\nlinks\n[text](https://quarto.org/) | text\n\n\n\nlinks\n&lt;https://quarto.org/&gt; | https://quarto.org/)\n\n\n\nimages\n![alternative text](link-to-image) | (cannot render in a table)\n\n\n\n\nFor more examples and details of using markdown in Quarto, see the official Quarto “Markdown Basics” documentation.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#summary",
    "href": "why-qmd.html#summary",
    "title": "1  Why Quarto",
    "section": "3.1 Summary",
    "text": "3.1 Summary\nIn this section we’ve learned about:\n\nWhat the value is in a reproducible report\nWhat is Markdown\nHow to combine software and writing\nHow to use Markdown",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#learning-more",
    "href": "why-qmd.html#learning-more",
    "title": "1  Why Quarto",
    "section": "3.2 Learning more",
    "text": "3.2 Learning more\n\nPosit’s Quarto cheatsheet",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "why-qmd.html#footnotes",
    "href": "why-qmd.html#footnotes",
    "title": "1  Why Quarto",
    "section": "",
    "text": "The article, Freedman, 2010, Heard via Garret Grolemund’s great talk↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Why Quarto</span>"
    ]
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "2  Installation",
    "section": "",
    "text": "2.1 Overview\nIn this section, the aim is to have everyone setup with R, RStudio, and Quarto",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#overview",
    "href": "installation.html#overview",
    "title": "2  Installation",
    "section": "",
    "text": "Duration 15 minutes",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#questions",
    "href": "installation.html#questions",
    "title": "2  Installation",
    "section": "2.2 Questions",
    "text": "2.2 Questions\n\nHow do I install R?\nHow do I install Quarto?\nHow do I install LaTeX in a sane way?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#software-setup",
    "href": "installation.html#software-setup",
    "title": "2  Installation",
    "section": "2.3 Software Setup",
    "text": "2.3 Software Setup\n\n2.3.1 R\n\n2.3.1.1 Windows\nhttps://cloud.r-project.org/bin/windows/\n\n\n2.3.1.2 MacOS\nhttps://cloud.r-project.org/bin/macosx/\n\n\n2.3.1.3 Linux\nhttps://cloud.r-project.org/bin/linux/\n\n\n\n2.3.2 RStudio\nhttps://posit.co/download/rstudio-desktop/#download\n\n\n2.3.3 Quarto\nQuarto installation page",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#checking-you-are-up-to-date",
    "href": "installation.html#checking-you-are-up-to-date",
    "title": "2  Installation",
    "section": "2.4 Checking you are up to date",
    "text": "2.4 Checking you are up to date\nTo ensure you are up to date, run the following script to install the packages.\n\ninstall.packages(\"quarto\")\ninstall.packages(\"knitr\")\ninstall.packages(\"here\")\ninstall.packages(\"tidyverse\")\ninstall.packages(\"broom\")\ninstall.packages(\"fs\")\ninstall.packages(\"usethis\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#a-note-on-pdf",
    "href": "installation.html#a-note-on-pdf",
    "title": "2  Installation",
    "section": "2.5 A note on PDF",
    "text": "2.5 A note on PDF\nQuarto documents can be compiled to PDF, which is a great feature. In order to convert the documents to PDF, they use a software called LaTeX (pronounced la-tek or lay-tek).\nInstalling LaTeX is thankfully handled when you install Quarto, as Quarto includes a built-in Latexmk engine.\n\n2.5.1 PDF / LaTeX Pain\nInstalling LaTeX can be a pain, but thankfully Yihui Xie has put a lot of time and energy into making an easier way to install it - tinytex. tinytex is an R package that installs a sane, lightweight (&lt;200Mb) version of LaTeX.\nIf you are running into issues rendering a PDF, you can try the following:\n\ntinytex::install_tinytex()\n\nIf you get the following error, this is good! As it means that TeX has already been installed:\nError: Detected an existing tlmgr at /usr/local/bin/tlmgr. It seems TeX Live has been installed (check tinytex::tinytex_root()). You have to uninstall it, or use install_tinytex(force = TRUE) if you are sure TinyTeX can override it (e.g., you are a PATH expert or installed TinyTeX previously).\nAlternatively, you can run the following from the terminal\n\nquarto install tinytex\n# follow the prompts from here\n\n\n\n2.5.2 Problem solving with LaTeX\nIf you have any problems with installing tinytex, I recommend you check out the tinytex FAQ page.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "installation.html#test-script",
    "href": "installation.html#test-script",
    "title": "2  Installation",
    "section": "2.6 Test Script",
    "text": "2.6 Test Script\nYou should be able to run the following code on your machine\n\nlibrary(quarto)\nlibrary(knitr)\nlibrary(here)\nlibrary(tidyverse)\nlibrary(broom)\nlibrary(fs)\nlibrary(usethis)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Installation</span>"
    ]
  },
  {
    "objectID": "rstudio.html",
    "href": "rstudio.html",
    "title": "3  RStudio, What and Why",
    "section": "",
    "text": "3.1 Overview",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "rstudio.html#overview",
    "href": "rstudio.html#overview",
    "title": "3  RStudio, What and Why",
    "section": "",
    "text": "Teaching 5 minutes\nExercises 2 minutes",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "rstudio.html#questions",
    "href": "rstudio.html#questions",
    "title": "3  RStudio, What and Why",
    "section": "3.2 Questions",
    "text": "3.2 Questions\n\nWhat is RStudio?\nWhy should I use RStudio?\nWhat features should I change?",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "rstudio.html#objectives",
    "href": "rstudio.html#objectives",
    "title": "3  RStudio, What and Why",
    "section": "3.3 Objectives",
    "text": "3.3 Objectives\n\nGet familiarised with RStudio\nGet set up with not storing the RStudio workspace\nDownload the course materials for the workshop",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "rstudio.html#what-is-rstudio-and-why-should-i-use-it",
    "href": "rstudio.html#what-is-rstudio-and-why-should-i-use-it",
    "title": "3  RStudio, What and Why",
    "section": "3.4 What is RStudio, and why should I use it?",
    "text": "3.4 What is RStudio, and why should I use it?\n\nIf R is the engine and bare bones of your car, then RStudio is like the rest of the car.\n\nThe engine is super critical part of your car. But in order to make things properly functional, you need to have a steering wheel, comfy seats, a radio, rear and side view mirrors, storage, and seatbelts. RStudio is all those niceties\nThe RStudio layout has the following features:\n\nOn the upper left, the Quarto script\nOn the lower left, the R console\nOn the lower right, the view for files, plots, packages, help, and viewer.\nOn the upper right, the environment / history pane\n\n\n\n\n\n\nA screenshot of the RStudio working environment.\n\n\n\n\nWe saw a bit of what an Quarto script does.\n\nThe R console is the bit where you can run your code.\nThe file/plot/package viewer is a handy browser for your current files, like Finder, or File Explorer.\nPlots are where your plots appear, you can view packages, see the help files.\nThe environment / history pane contains the list of things you have created, and the past commands that you have run.\n\n\n\n\n\n\n\nYour Turn: RStudio default options\n\n\n\nTo first get set up, I highly recommend changing the following setting\nTools &gt; Global Options (or Cmd + , on macOS)\nUnder the General tab:\n\nFor workspace:\n\nUncheck restore .RData into workspace at startup.\nSave workspace to .RData on exit : “Never”.\n\nFor History:\n\nUncheck “Always save history (even when not saving .RData).\nUncheck “Remove duplicate entries in history”.\n\n\n\n\n\n\n\n\n\n\nFigure 3.1: Setting the options right for RStudio, so you don’t restore previous sessions work, and don’t save it either.\n\n\n\n\n\nThis means that you won’t save the objects and other things that you create in your R session and reload them. This is important for two reasons\n\nReproducibility: you don’t want to have objects from last week cluttering your session\nPrivacy: you don’t want to save private data or other things to your session. You only want to read these in.\n\nYour “history” is the commands that you have entered into R.\nAdditionally, not saving your history means that you won’t be relying on things that you typed in the last session, which is a good habit to get into!",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "rstudio.html#learning-more",
    "href": "rstudio.html#learning-more",
    "title": "3  RStudio, What and Why",
    "section": "3.5 Learning more",
    "text": "3.5 Learning more\n\nRStudio IDE cheatsheet",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>RStudio, What and Why</span>"
    ]
  },
  {
    "objectID": "workflow.html",
    "href": "workflow.html",
    "title": "4  Workflow",
    "section": "",
    "text": "4.1 Overview\nWe can prevent unexpected problems if we can maintain an order to your files, paths, and directories. A common problem that arises is R not knowing where a certain file is. For example, we get the error:\nBecause R doesn’t know where \"my-very-important-data-file-somewhere.csv\" is.\nPracticing good file storage hygiene will help maintain an order to files, paths, and directories. This will make you more productive in the future, because you’ll spend less time fighting against file paths.\nNot sure what a file path is? We explain that as well.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#overview",
    "href": "workflow.html#overview",
    "title": "4  Workflow",
    "section": "",
    "text": "Teaching 10 minutes\nExercises 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#questions",
    "href": "workflow.html#questions",
    "title": "4  Workflow",
    "section": "4.2 Questions",
    "text": "4.2 Questions\n\nWhere should I put all my files?\nWhat is an RStudio project, anyway?\nWhat is a file path?",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#objectives",
    "href": "workflow.html#objectives",
    "title": "4  Workflow",
    "section": "4.3 Objectives",
    "text": "4.3 Objectives\n\nUnderstand what a file path is\nSet up an RStudio Project to organise your work\nPut some data in your project to set up the next tasks\n\n\n\n\n\n\n\nYour Turn\n\n\n\nIn groups of 2-4 discuss:\n\nWhat your normal “workflow” is for starting a new project\nPossible challenges that might arise when maintaining your project",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#when-you-start-a-new-project-open-a-new-rstudio-project",
    "href": "workflow.html#when-you-start-a-new-project-open-a-new-rstudio-project",
    "title": "4  Workflow",
    "section": "4.4 When you start a new project: Open a new RStudio project",
    "text": "4.4 When you start a new project: Open a new RStudio project\nThis section is heavily influenced by Jenny Bryan’s great blog post on project based workflows.\nSometimes this is the first line of an R Script or R markdown file.\nsetwd(\"c:/really/long/file/path/to/this/directory\")\n\n\n\n\n\n\nQuestion\n\n\n\nWhat do you think the setwd code does?\n\n\n\n4.4.1 So what does this do?\nThis says, “set my working directory to this specific working directory”.\nIt means that you can read in data and other things like this:\ndata &lt;- read_csv(\"data/mydata.csv\")\nInstead of\ndata &lt;- read_csv(\"c:/really/long/file/path/to/this/directory/data/mydata.csv\")\nSo while this has the effect of making the file paths work in your file, it is a problem. It is a problem because, among other things, using setwd() like this:\n\nHas 0% chance of working on someone else’s machine (this could include you in 6 months!)\nYour file is not self-contained and portable. (Think: “What if this folder moved to /Downloads, or onto another machine?”)\n\nSo, to get this to work, you need to hand edit the file path to your machine.\nThis is painful.\nWhen you do this all the time, it gets old, fast.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#what-is-a-file-path",
    "href": "workflow.html#what-is-a-file-path",
    "title": "4  Workflow",
    "section": "4.5 What is a file path?",
    "text": "4.5 What is a file path?\nThis might all be a bit confusing if you don’t know what a file path is. A file path is the machine-readable directions to where files on your computer live. So, the file path:\n/Users/njtierney/Desktop/qmd4sci-materials/demo.R\nDescribes the location of the file “demo.R”. This could be visualised as:\nusers\n  └── njtierney\n      └── Desktop\n          └──  qmd4sci-materials\n               └── demo.R &lt;&lt; THIS IS THE FILE HERE\n               └── exercises\n               └── exploratory-data-analysis\n                   └── eda-document.qmd\n                   └── eda-script.R\n               └──  data\n                    └──  gapminder.csv\nSo, if you want to read in the gapminder.csv file, you might need to write code like this:\ngapminder &lt;- read_csv(\"/Users/njtierney/Desktop/qmd4sci-materials/data/gapminder.csv\")\nAs we now know, this is a problem, because this is not portable code. It is unlikely someone else will have the gapminder.csv data stored under the folders, \"Users/njtierney/Desktop\".\nIf you have an RStudio project file inside the qmd4sci-materials folder, you can instead write the following:\ngapminder &lt;- read_csv(\"data/gapminder.csv\")\n\n\n\n\n\n\nYour Turn\n\n\n\n\n(1-2 minutes) Imagine you see the following directory path: \"/Users/miles/etc1010/week1/data/health.csv\" what are the folders above the file, health.csv?\nWhat would be the result of using the following code in demo-gapminder.qmd, and then using the code, and then moving this to another location, say inside your C drive?\n\nsetwd(\"Downloads/etc1010/week1/week1.qmd)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#is-there-an-answer-to-the-madness",
    "href": "workflow.html#is-there-an-answer-to-the-madness",
    "title": "4  Workflow",
    "section": "4.6 Is there an answer to the madness?",
    "text": "4.6 Is there an answer to the madness?\nThis file path situation is a real pain. Is there an answer to the madness?\nThe answer is yes!\nI highly recommend when you start on a new idea, new research project, paper. Anything that is new. It should start its life as an rstudio project.\nAn rstudio project helps keep related work together in the same place. Amongst other things, they:\n\nKeep all your files together.\nSet the working directory to the project directory.\nStarts a new session of R.\nRestore previously edited files into the editor tabs.\nRestore other rstudio settings.\nAllow for multiple R projects open at the same time.\n\nThis helps keep you sane, because:\n\nYour projects are each independent.\nYou can work on different projects at the same time.\nObjects and functions you create and run from project idea won’t impact one another.\n\nYou can refer to your data and other projects in a consistent way.\n\nAnd finally, the big one:\nRStudio projects help resolve file path problems, because they automatically set the working directory to the location of the rstudio project.\nLet’s open one together.\n\n\n\n\n\n\nYour Turn Use your own rstudio project\n\n\n\n\nIn RStudio, and run the following code to start a new rstudio project called “qmd4sci-materials”.\n\nusethis::use_course(\"njtierney/qmd4sci-materials\")\n\nFollow the prompts to download this to your desktop and then run the rstudio project. (You can move it later if you like!)\nYou are now in an rstudio project!\n\n\n\n\n\n\n\n\n\nYour Turn: open the demo.R file\n\n\n\n\nRun the code inside the demo.R file\nWhy does the read_csv code work?\nRun the code inside the exploratory-data-analysis folder - eda-script.R.\nDoes the read_csv code work?\nRun the code inside the exploratory-data-analysis folder - eda-document.qmd, by clicking the “render” button (we’ll go into this in more detail soon!)\nDoes it work?",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#the-here-package",
    "href": "workflow.html#the-here-package",
    "title": "4  Workflow",
    "section": "4.7 The “here” package",
    "text": "4.7 The “here” package\nAlthough RStudio projects help resolve file path problems, in some cases you might have many folders in your r project. To help navigate them appropriately, you can use the here package to provide the full path directory, in a compact way.\nhere::here(\"data\")\nreturns\n[1] \"/Users/nick/github/njtierney/qmd4sci-materials/data\"\nAnd\nhere::here(\"data\", \"gapminder.csv\")\nreturns\n[1] \"/Users/nick/github/njtierney/qmd4sci-materials/data/gapminder.csv\"\n(Note that these absolute file paths will indeed be different on my computer compared to yours - super neat!)\nYou can read the above here code as:\n\nIn the folder data, there is a file called gapminder.csv, can you please give me the full path to that file?\n\nThis is really handy for a few reasons:\n\nIt makes things completely portable\nQuarto documents have a special way of looking for files, this helps eliminate file path pain.\nIf you decide to not use RStudio projects, you have code that will work on any machine",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "workflow.html#remember",
    "href": "workflow.html#remember",
    "title": "4  Workflow",
    "section": "4.8 Remember",
    "text": "4.8 Remember\n\nIf the first line of your R script is\n\nsetwd(\"C:\\Users\\jenny\\path\\that\\only\\I\\have\")\n\nI will come into your office and SET YOUR COMPUTER ON FIRE 🔥.\n\n– Jenny Bryan\n\n\n\n\n\n\nAside: Creating an RStudio project\n\n\n\n\n\nYou can create an Rstudio project by going to:\nfile &gt; new project &gt; new directory &gt; new project &gt; name your project &gt; create project.\nYou can also click on the create project button in the top left corner\n\n\n\n\n\n\n\n\n\nThen go to new directory, if it is a new folder - otherwise if you have an existing folder you have - click on existing directory.\n\n\n\n\n\n\n\n\n\nThen go to new project\n\n\n\n\n\n\n\n\n\nThen write the name of your project. I think it is usually worthwhile spending a bit of time thinking of a name for your project. Even if it is only a few minutes, it can make a difference. You want to think about:\n\nKeeping it short.\nNo spaces.\nCombining words.\n\nFor example, I had a project looking at bat calls, so I called it screech, because bats make a screech-y noise. But maybe you’re doing some global health analysis so you call it “world-health”.\nAnd click “create project”.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Workflow</span>"
    ]
  },
  {
    "objectID": "using-qmd.html",
    "href": "using-qmd.html",
    "title": "5  Using Quarto",
    "section": "",
    "text": "5.1 Overview\nSo far we have covered:\nNow, let’s talk about using Quarto.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#overview",
    "href": "using-qmd.html#overview",
    "title": "5  Using Quarto",
    "section": "",
    "text": "Teaching 10 minutes\nExercises 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#questions",
    "href": "using-qmd.html#questions",
    "title": "5  Using Quarto",
    "section": "5.2 Questions",
    "text": "5.2 Questions\n\nHow should I start an Quarto document?\nWhat do I put in the YAML metadata?\nHow do I create a code chunk?\nWhat sort of options to I need to worry about for my code?",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#objectives",
    "href": "using-qmd.html#objectives",
    "title": "5  Using Quarto",
    "section": "5.3 Objectives",
    "text": "5.3 Objectives\n\nCreate a Quarto document, do some basic exploration",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#the-anatomy-of-a-quarto-document",
    "href": "using-qmd.html#the-anatomy-of-a-quarto-document",
    "title": "5  Using Quarto",
    "section": "5.4 The anatomy of a Quarto document",
    "text": "5.4 The anatomy of a Quarto document\nThis is a Quarto document (demo). It has three parts:\n\nMetadata (YAML)\nText (markdown formatting)\nCode (code formatting)\n\n\n\n5.4.1 Metadata\nThe metadata of the document tells you how it is formed - what the title is, what date to put, and other control information. If you’re familiar with LaTeX, this is kind of like how you specify the many options, what sort of document it is, what styles to use, and so on at the front matter.\nQuarto documents use YAML (YAML Ain’t Markup Language) to provide the metadata. It looks like this.\n---\ntitle: \"An example document\"\nauthor: \"Nicholas Tierney\"\nformat: html\n---\nIt starts and ends with three dashes ---, and has fields like the following: title, author, and format.\ntitle and author are special inputs which place the title and author information at the top of the document in large font. They are optional!\nformat: html tells us we want this to be a HTML formatted document - you’ll see what this looks like in a moment!\n\n\n5.4.2 Text\nIs markdown, as we discussed in the earlier section,\nIt provides a simple way to mark up text\n- bullet list\n- bullet list\n- bullet list\n\n1. numbered list\n2. numbered list\n3. numbered list\n\n__bold__, **bold**, _italic_, *italic*\n\n&gt; quote of something profound \n```r\n# computer code goes in three back ticks\n1 + 1\n2 + 2\n```\nWould be converted to:\n\nbullet list\nbullet list\nbullet list\n\n\nnumbered list\nnumbered list\nnumbered list\n\nbold, bold, italic, italic\n\nquote of something profound\n\n\n# computer code goes in three back ticks\n1 + 1\n\n[1] 2\n\n2 + 2\n\n[1] 4\n\n\n\n\n5.4.3 Code\nWe refer to code in an Quarto document in two ways:\n\nCode chunks, and\nInline code.\n\n\n5.4.3.1 Code chunks\nCode chunks are marked by three backticks and curly braces. We put the letter r inside them to denote them as “r” code chunks, but you can instead use “python” and “julia” instead:\n\nRpythonjulia\n\n\n```{r}\n#| label: r-chunk-name\n# a code chunk\n```\n\n\n```{python}\n#| label: py-chunk-name\n# a code chunk\n```\n\n\n```{julia}\n#| label: julia-chunk-name\n# a code chunk\n```\n\n\n\n\n\n\n\n\n\nThis book currently focusses only on R\n\n\n\n\n\nQuarto provides support for R, Python, Julia, and Observable, which are all very powerful and awesome languages! However currently we will only be focussing on using R in this book. But I want to make sure that you know you can use python, or Julia, or Observable! More languages will be supported into the future, I believe.\n\n\n\na backtick is a special character you might not have seen before, it is typically located under the tilde key (~). On USA / Australia keyboards, is under the escape key:\n\n\n\n\n\nimage from https://commons.wikimedia.org/wiki/File:ANSI_Keyboard_Layout_Diagram_with_Form_Factor.svg\n\n\n\n\n\n\n\n5.4.4 Chunk names\nEvery chunk should ideally have a name. As I’ve mentioned earlier, naming things is hard, but follow these rules and you’ll be fine:\n\none word that describes the action (e.g., “read”)\none word that describes the thing inside the code (e.g, “gapminder”)\nseparate words with “-” or “_” (e.g., read-gapminder)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#code-chunk-options",
    "href": "using-qmd.html#code-chunk-options",
    "title": "5  Using Quarto",
    "section": "5.5 Code chunk options",
    "text": "5.5 Code chunk options\nYou can control how the code is output by changing the code chunk options, which are written with a #|, called a “hash-pipe”, since # is “hash”, and | is “pipe”, but might sometimes be called “bar” or “v-bar”.\n\n```{r}\n#| label: read-gapminder\n#| eval: false\ngap &lt;- read_csv(\"gapminder.csv\")\n```\n\nA nice feature of Quarto + Rstudio is that they provide code completion when you start writing the code chunk options, and they will provide options when hitting “tab”.\n\nIn the past Rmarkdown required “TRUE” and “FALSE”, but note that Quarto always uses true or false in lowercase, and never “yes” or “no”.\nThe code chunks you need to know about right now are:\n\neval: true/false Do you want to evaluate the code?\necho: true/false Do you want to print the code?\ncache: true / false Do you want to save the output of the chunk so it doesn’t have to run next time?\ninclude: Do you want to include code output in the final output document? Setting to false means nothing is put into the output document, but the code is still run.\n\n\n  \n\nYou can read more about the options at the official documentation: https://quarto.org/docs/computations/execution-options.html\n\n5.5.1 Inline code\nSometimes you want to run the code inside a sentence. When the code is run inside the sentence, it is called running the code “inline”.\nYou might want to run the code inline to name the number of variables or rows in a dataset in a sentence like:\n\nThere are XXX observations in the airquality dataset, and XXX variables.\n\nYou can call code “inline” like so:\n```{r}\nr_heights &lt;- c(153, 151, 156, 160, 171)\nr_mean &lt;- mean(r_heights)\n```\n\nThe mean of these heights is `{r} r_mean`\nWhich will produce the following sentence:\n\nThe mean of these heights is 158.2\n\nEssentially, instead of using three backticks to write multiple lines of code, you use a single backtick. You can think of this as a backtick being used inside text for a one liner, whereas creating a code fence with three backticks indicates something longer.\nThere are `{r} nrow(airquality)` observations in the airquality dataset, \nand `{r} ncol(airquality)` variables.\nWhich gives you the following sentence\n\nThere are 153 observations in the airquality dataset, and 6 variables.\n\nWhat’s great about this is that if your data changes upstream, then you don’t need to work out where you mentioned your data and change that bit of text. You just render the document and it takes care of these details.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#creating-a-quarto-document",
    "href": "using-qmd.html#creating-a-quarto-document",
    "title": "5  Using Quarto",
    "section": "5.6 Creating a Quarto document",
    "text": "5.6 Creating a Quarto document\n\nRstudio menu system\nExplore the template provided by Rstudio\nCompile an Quarto document",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#working-with-a-quarto-document",
    "href": "using-qmd.html#working-with-a-quarto-document",
    "title": "5  Using Quarto",
    "section": "5.7 Working with a Quarto document",
    "text": "5.7 Working with a Quarto document\nDemo: Create a Quarto document in rstudio.\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUse the rstudio project you previously created, qmd4sci-materials, and open the “01-qmd-examples.qmd” file.\nRun some brief summaries of the data in the Quarto document:\n\nhist(data$)\nHow big is the data?\nHow many countries are there?\nWhat was the lowest life expectancy in Australia’s History?\nHow about the lowest GDP for Australia?\nWhere does Australia rank in GDP in 1997?",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "using-qmd.html#nicks-quarto-starter-pack",
    "href": "using-qmd.html#nicks-quarto-starter-pack",
    "title": "5  Using Quarto",
    "section": "5.8 Nick’s Quarto starter pack",
    "text": "5.8 Nick’s Quarto starter pack\nI highly recommend that each document you write has a certain structure:\n\nSets global options in the YAML\nFirst code chunk manages libraries\nSecond code chunk manages functions\n\nFor example\n---\ntitle: example\nformat: \n  html:\n    fig-align: center\n    fig-width: 4\n    fig-height: 4\n    fig-format: png\nexecute:\n  echo: false\n  cache: true\n---\n\n\n```{r}\n#| label: library\nlibrary(tidyverse)\n```\n\n```{r}\n#| label: functions\n# A function to scale input to 0-1\nscale_01 &lt;- function(x){\n  (x - min(x, na.rm = TRUE)) / diff(range(x, na.rm = TRUE))\n}\n```\n\n```{r}\n#| label: read-data\ngapminder &lt;- read_csv(here::here(\"data\", \"gapminder.csv\"))\n```\nIn the YAML chunk under execute, you set the options that you want to define globally. In this case, I’ve told Quarto:\n\nfig-align: center Align my figures in the center\nfig-width: 4 & fig-height: 4. Set the width and height to 4 inches.\nfig-format: png. Save the images as PNG\ncache: true. Save the output results of all my chunks so that they don’t need to be run again.\necho: false: I don’t want any code printed by setting echo: false.\n\nIn the library chunk, you put all the library calls. This helps make it clearer for anyone else who might read your work what is needed to run this document. I often go through the process of moving these library calls to the top of the document when I have a moment, or when I’m done writing. You can also look at Miles McBain’s packup package to help move these library calls to the top of a document.\nIn the functions chunk, you put any functions that you write in the process of writing your document. Similar to the library chunk, I write these functions as I go, as needed, and them move these to the top when I get a moment, or once I’m done. The benefit of this is that all your functions are in one spot, and you might be able to identify ways to make them work better together, or improve them separately. You might even want to move these into a new R package, and putting them here makes that easier to see what you are doing.\nIn the readr chunk, you read in any data you are going to be using in the document.\nNow, this is my personal preference, and there are definitely other ways to organise things! But, I find the following benefits:\n\nThe “top part” of your document contains all the metadata / setup info. Your global options. You don’t need to specify every single code chunk.\nIt helps another person get oriented with your work - they know the settings, the functions used, and the special things that you wrote (your functions)\nRemember, “another person” includes yourself in 6 months. You are always collaborating with your future self. You are always collaborating with your future self. Say it with me.\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUpdate the “01-qmd-example.qmd” Quarto document you just created, based on the aforementioned steps discussed above.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Using Quarto</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html",
    "href": "pdf-html-word.html",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "",
    "text": "6.1 Overview\nOne of the great things about Quarto is that we can convert it to many different output types. The top three that you might be most likely to use are HTML, PDF, and Microsoft Word. There are other formats! But we can discuss later.\nIn this section, we are going to briefly discuss how to render to these output formats, and some things that you might want to do for each of them.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html#overview",
    "href": "pdf-html-word.html#overview",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "",
    "text": "Teaching: 10 minutes\nExercises: 15 minutes",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html#questions",
    "href": "pdf-html-word.html#questions",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "6.2 Questions",
    "text": "6.2 Questions\n\nHow do I convert to HTML, PDF, or Word?\nHow do I set options specific to each of these?\nHow can I include a screenshot of an interactive graphic in PDF or Word?\nHow to make a HTML page “self contained”?",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html#objectives",
    "href": "pdf-html-word.html#objectives",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "6.3 Objectives",
    "text": "6.3 Objectives",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html#how-do-i-convert-to-html-pdf-or-word",
    "href": "pdf-html-word.html#how-do-i-convert-to-html-pdf-or-word",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "6.4 How do I convert to HTML, PDF, or Word?",
    "text": "6.4 How do I convert to HTML, PDF, or Word?\nHere are three ways to do this:\n\nYou can control this in the “render” button\n\n\n\n\n\n\n\n\n\n\nYou might notice that depending on the option you select, this changes things in the YAML - which is another way to control which output you have:\n\nYou can change the YAML option\n\ntitle: \"Exploring gapminder\"\nformat: html\ntitle: \"Exploring gapminder\"\nformat: pdf\ntitle: \"Exploring gapminder\"\nformat: docx\n\nYou can call the quarto render function - from the terminal if you wish\n\n\nquarto render example.qmd --to html\nquarto render example.qmd --to docx\n\n\n6.4.1 A note on workflow with Quarto: HTML first, PDF/word later\nIt can be easy to get caught up with how your document looks. I highly recommend avoiding compiling to PDF or word until you really need to. This is also recommended by the author of rmarkdown and knitr, Yihui Xie. Because HTML doesn’t have page breaks, this means that you can spend time working on generating content, and not trying to get figures to line up correctly.\nThis was a minor revelation to me, to understand that page breaks were the cause of so much angst and pain. Embrace HTML, I say!",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "pdf-html-word.html#how-to-make-a-html-page-self-contained",
    "href": "pdf-html-word.html#how-to-make-a-html-page-self-contained",
    "title": "6  HTML, PDF, and Word (and more!)",
    "section": "6.5 How to make a HTML page “self contained”",
    "text": "6.5 How to make a HTML page “self contained”\nPDFs are great because they are a very Portable Document Format (PDF!). But HTML can be really awesome as well because:\n\nno page breaks\nawesome online interactive data vis\ndid I mention no page breaks?\n\nBut in order to share a HTML document you’ll need to also typically share a folder of other figures/files etc.\nYou can have everything crammed into a single HTML page by setting the option embed-resources to true:\ntitle: HTML is great\nformat:\n  html:\n    embed-resources: true\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing your “01-qmd-examples.qmd” Quarto document you were using earlier, generate three reports, one as HTML, one as PDF, and one as microsoft word. Remember, if you are having PDF problems, see the installation chapter note on installing LaTeX with the R package, tinytex.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>HTML, PDF, and Word (and more!)</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html",
    "href": "keyboard-shortcuts.html",
    "title": "7  Keyboard Shortcuts",
    "section": "",
    "text": "7.1 Overview\nKeyboard shortcuts tend to make our lives easier. Some that you might already be familiar with in day to day life are: quickly saving (Cmd + S or Ctrl + S), or Undo (Cmd + Z or Ctrl + Z).\nThere are many keyboard shortcuts you can access in R, this section provides a brief tour of them, and why you might want to use them.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html#overview",
    "href": "keyboard-shortcuts.html#overview",
    "title": "7  Keyboard Shortcuts",
    "section": "",
    "text": "Teaching 5 minutes\nExercises 5 minutes",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html#questions",
    "href": "keyboard-shortcuts.html#questions",
    "title": "7  Keyboard Shortcuts",
    "section": "7.2 Questions",
    "text": "7.2 Questions\n\nWhat sort of keyboard shortcuts should I care about?",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html#objectives",
    "href": "keyboard-shortcuts.html#objectives",
    "title": "7  Keyboard Shortcuts",
    "section": "7.3 Objectives",
    "text": "7.3 Objectives",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html#table-of-common-shortcuts",
    "href": "keyboard-shortcuts.html#table-of-common-shortcuts",
    "title": "7  Keyboard Shortcuts",
    "section": "7.4 Table of Common Shortcuts",
    "text": "7.4 Table of Common Shortcuts\nBelow is a small table of tasks you can perform with keyboard\n\n\n\n\n\n\n\n\nAction\nWindows/Linux\nMac\n\n\n\n\nKnit document\nCtrl + Shift + K\nCmd + Shift + K\n\n\nInsert Chunk\nCtrl + Alt + I\nCmd + Option + I\n\n\nRun Current Chunk\nCtrl + Alt + C\nCmd + Option + C\n\n\nJump to Shift+Alt+J\nCmd+Shift+Option+J\n\n\n\nShow Keyboard Shortcut Reference\nAlt+Shift+K\nOption+Shift+K\n\n\nCreate multiple cursors\nCtrl + Alt + Up/Down\noption + control + Up/Down\n\n\nDelete the current line\nCtrl + D\nCmd + D\n\n\nUn/Comment out a line\nCtrl + Shift + C\nCmd + Shift + C\n\n\nReformat Section\nCtrl + Shift + A\nCmd + Shift + A",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "keyboard-shortcuts.html#further-reading",
    "href": "keyboard-shortcuts.html#further-reading",
    "title": "7  Keyboard Shortcuts",
    "section": "7.5 Further Reading",
    "text": "7.5 Further Reading\n\nThe Rstudio Cheat Sheet has an index of shortcuts.\nThis help file has a guide to customising keyboard shortcuts.\nThe shrtcts R package for creating new shortcuts.\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nIn your awesome quarto document\n\nOractice using the Keyboard Shortcut Reference and find the keyboard shortcut for inserting a pipe character ( %&gt;% or |&gt;)\nSpend 3 minutes practicing these commands.\n\nAsk Nick to demonstrate some of his favourite shortcut combos",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Keyboard Shortcuts</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html",
    "href": "figures-tables-captions.html",
    "title": "8  Figures, Tables, Captions.",
    "section": "",
    "text": "8.1 Overview\nYou need figures and tables in your own writing, whether it be a journal paper, an internal document, or some documentation. In this section, we discuss how to add figures and tables into your Quarto document, and how to provide captions for them.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#overview",
    "href": "figures-tables-captions.html#overview",
    "title": "8  Figures, Tables, Captions.",
    "section": "",
    "text": "Teaching 10 minutes\nExercises 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#questions",
    "href": "figures-tables-captions.html#questions",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.2 Questions",
    "text": "8.2 Questions\n\nHow do I create a figure in Quarto?\nHow do I create a table in Quarto?\nHow do I add captions for figures and tables?",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#objectives",
    "href": "figures-tables-captions.html#objectives",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.3 Objectives",
    "text": "8.3 Objectives",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#tables",
    "href": "figures-tables-captions.html#tables",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.4 Tables",
    "text": "8.4 Tables\nTo produce a table, I recommend you use the kable function from the knitr package.\n\n\n\n\n\n\nOther table R packages\n\n\n\n\n\nThere are many other table making pieces of R packages, such as gt, formattable, reactable, and flextable). But I think you can get 90% of the way there with kable from knitr, and for the\n\n\n\n\n8.4.1 Demonstrating using tables\nkable takes a data.frame as input, and outputs the table into a markdown table, which will get rendered into the appropriate output format.\nFor example, let’s say we wanted to share the first 6 rows of our gapminder data.\nThis gives us the following output\n\ntop_gap &lt;- head(gapminder)\n\nknitr::kable(top_gap)\n\n\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAfghanistan\nAsia\n1952\n28.801\n8425333\n779.4453\n\n\nAfghanistan\nAsia\n1957\n30.332\n9240934\n820.8530\n\n\nAfghanistan\nAsia\n1962\n31.997\n10267083\n853.1007\n\n\nAfghanistan\nAsia\n1967\n34.020\n11537966\n836.1971\n\n\nAfghanistan\nAsia\n1972\n36.088\n13079460\n739.9811\n\n\nAfghanistan\nAsia\n1977\n38.438\n14880372\n786.1134\n\n\n\n\n\nSo how does that work? kable prints out the following:\n|country     |continent | year| lifeExp|      pop| gdpPercap|\n|:-----------|:---------|----:|-------:|--------:|---------:|\n|Afghanistan |Asia      | 1952|  28.801|  8425333|  779.4453|\n|Afghanistan |Asia      | 1957|  30.332|  9240934|  820.8530|\n|Afghanistan |Asia      | 1962|  31.997| 10267083|  853.1007|\n|Afghanistan |Asia      | 1967|  34.020| 11537966|  836.1971|\n|Afghanistan |Asia      | 1972|  36.088| 13079460|  739.9811|\n|Afghanistan |Asia      | 1977|  38.438| 14880372|  786.1134|\nAnd this then gets rendered as a table. This works for HTML, PDF, and word!\n\n8.4.1.1 Adding captions to a table\nNow, say that we wanted to include a caption? We use the caption argument. This will also automatically number the table (woo! We’ll cover this later).\n\nknitr::kable(top_gap,\n             caption = \"The first 6 rows of the dataset, gapminder\")\n\n\nThe first 6 rows of the dataset, gapminder\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAfghanistan\nAsia\n1952\n28.801\n8425333\n779.4453\n\n\nAfghanistan\nAsia\n1957\n30.332\n9240934\n820.8530\n\n\nAfghanistan\nAsia\n1962\n31.997\n10267083\n853.1007\n\n\nAfghanistan\nAsia\n1967\n34.020\n11537966\n836.1971\n\n\nAfghanistan\nAsia\n1972\n36.088\n13079460\n739.9811\n\n\nAfghanistan\nAsia\n1977\n38.438\n14880372\n786.1134\n\n\n\n\n\nSome other useful features of kable include setting the rounding number, with the digits option.\nFor example, we could present the first 2 digits of each number like so:\n\nknitr::kable(top_gap,\n             caption = \"The first 6 rows of the dataset, gapminder\",\n             digits = 2)\n\n\nThe first 6 rows of the dataset, gapminder\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAfghanistan\nAsia\n1952\n28.80\n8425333\n779.45\n\n\nAfghanistan\nAsia\n1957\n30.33\n9240934\n820.85\n\n\nAfghanistan\nAsia\n1962\n32.00\n10267083\n853.10\n\n\nAfghanistan\nAsia\n1967\n34.02\n11537966\n836.20\n\n\nAfghanistan\nAsia\n1972\n36.09\n13079460\n739.98\n\n\nAfghanistan\nAsia\n1977\n38.44\n14880372\n786.11\n\n\n\n\n\nThere are other options that you can set in kable, but for these options will get you through a large majority of what you need. For more information on what kable can provide, see ?knitr::kable.\nThere are many different ways to produce tables in R. We have chosen to show kable today because kable is minimal, but powerful. If you want to extend kable to do more, look at kableExtra. For PDF/LaTeX output, I found the option kableExtra::kable_styling(latex_options = c(\"hold_position\")) particularly nice to just put the table where it should be, goshdarnit.\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing the “02-qmd-figures-chunks.qmd”\nCreate a summary of your gapminder data, put it into a table.\nAdd a caption to this table.\nSet the number of decimals to 2.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#figures",
    "href": "figures-tables-captions.html#figures",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.5 Figures",
    "text": "8.5 Figures\nPrinting figures is probably my favourite feature of Quarto. It is actually relatively straightforward in the case of plots. You provide the plot you want to show in a code chunk!\n\n\n\n\n\n\nDemo using gapminder\n\n\n\nFor example, I can print a plot of the gapminder data for Australia like so:\n\noptions(tidyverse.quiet = TRUE)\nlibrary(tidyverse)\n\ngapminder |&gt;\n  filter(country == \"Australia\") |&gt;\n  ggplot(aes(x = year,\n             y = lifeExp)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDemo: Captions for figures\n\n\n\nInserting a caption for a figure is a little bit different. The caption argument is controlled in the chunk option, under the option, fig-cap.\nSo to insert a figure, we do the following.\n\n```{r}\n#| label: gg-oz-gapminder\n#| fig-cap: \"Life expectancy from 1952 - 2007 for Australia. Life expentancy increases steadily except from 1962 to 1969. We can safely say that our life expectancy is higher than it has ever been!\"\nlibrary(ggplot2)\nlibrary(dplyr)\n\ngapminder |&gt;\n  filter(country == \"Australia\") |&gt;\n  ggplot(aes(x = lifeExp,\n             y = year)) + \n  geom_point()\n```\n\nWhich would produce the following output\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\ngapminder |&gt;\n  filter(country == \"Australia\") |&gt;\n  ggplot(aes(x = lifeExp,\n             y = year)) + \n  geom_point()\n\n\n\n\nLife expectancy from 1952 - 2007 for Australia. Life expentancy increases steadily except from 1962 to 1969. We can safely say that our life expectancy is higher than it has ever been!\n\n\n\n\n\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing 02-qmd-figures-chunks.qmd\n\nCreate a plot\nAdd a figure caption\n\n\n\n\n\n8.5.1 Adding multiple (sub) figures and (sub) captions\nSometimes you want to add multiple figures that are linked, or slightly different views of similar data and then reference them as Figure 1A and Figure 1B. You can do this with layout-ncol and fig-cap, and reference the figures with @fig-&lt;chunk-name&gt;-1 @fig-&lt;chunk-name&gt;-2. For example:\n```{r}\n#| label: fig-volcanos\n#| layout-ncol: 2\n#| fig-cap: \n#|   - \"An image plot of Auckland's Maunga Whau Volcano\"\n#|   - \"A contour plot of Auckland's Maunga Whau Volcano\"\n\nimage(volcano)\ncontour(volcano)\n```\n\n\n\n\n\n\n\n\n\nFigure 8.1: An image plot of Auckland’s Maunga Whau Volcano\n\n\n\n\n\n\n\n\n\n\n\nFigure 8.2: A contour plot of Auckland’s Maunga Whau Volcano\n\n\n\n\n\n\nWe can see the image plot as (@fig-volcanos-1) Figure 8.1 and the contour plot as @fig-volcanos-2 Figure 8.2.\nFor more information on this see https://quarto.org/docs/authoring/figures.html#layout and https://quarto.org/docs/authoring/cross-references.html",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#inserting-images",
    "href": "figures-tables-captions.html#inserting-images",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.6 Inserting images",
    "text": "8.6 Inserting images\nWe cannot always generate the graphics that we want - for example, we might have an image of something that we want to show, or perhaps a nice flowchart someone else made.\nIn our case, say we wanted to insert the Statistical Society of Australia logo into our document, there are two ways we can do this.\n\nWith markdown syntax\nwith knitr::include_graphics()\n\nMarkdown syntax\nThe markdown syntax to insert an image is: ![caption](path/to/image){options}\n\n\n\n\n\n\nDemo: inserting a logo\n\n\n\nSo we could insert the new SSA vic logo by doing the following:\n\n```\n![The new, gorgeous SSA Logo has a hidden element, can you see it?](https://qmd4sci.njtierney.com/figs/ssa-logo.png)\n```\n\nWhich would give us the following output:\n\n\n\nThe new, gorgeous SSA Logo has a hidden element, can you see it?\n\n\nBut say that we want more control over the output, like we want to center the image, and we want to make it smaller? Then you can use knitr::include_graphics(), and control the figure alignment using the options fig-align, and add a caption with fig-cap.\n\n```{r}\n#| label: ssa-logo\n#| fig-align: center\n#| fig-cap: \"The new SSA logo, which is actually a scatterplot, which is super neat!\"\nknitr::include_graphics(here::here(\"figs\", \"ssa-logo.png\"))\n```\n\n\nknitr::include_graphics(here::here(\"figs\", \"ssa-logo.png\"))\n\n\n\n\nThe new SSA logo, which is actually a scatterplot, which is super neat!\n\n\n\n\n\n\n\n\n\n\nControlling image output with css\n\n\n\n\n\nYou can control more features of figures, e.g., sizing, alignment, alt text, etc., by using CSS type styling, which you can read more about here: https://quarto.org/docs/authoring/figures.html#figure-sizing`\n\n\n\n\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nDownload the gapminder logo\nPut it into a new directory called “figs” (at the top level)\nInsert the image into your “02-qmd-figures-chunks.qmd” Quarto document around where you introduce gapminder.\nTry using both markdown ![]() syntax, and knitr::include_graphics().\nHint: Remember to refer to the image in the right spot using here!",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "figures-tables-captions.html#summary",
    "href": "figures-tables-captions.html#summary",
    "title": "8  Figures, Tables, Captions.",
    "section": "8.7 Summary",
    "text": "8.7 Summary\nWe’ve now learned how to insert tables, plots, and images into our documents!",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Figures, Tables, Captions.</span>"
    ]
  },
  {
    "objectID": "changing-figures.html",
    "href": "changing-figures.html",
    "title": "9  Customising your figures",
    "section": "",
    "text": "9.1 Overview\nWhen you produce figures, you usually want to tweak them a little bit. A bit wider, perhaps a bit taller. Perhaps a different image type other than “png”, because the journal requires “svg” or “jpg”. Maybe you need 600dpi because you’re going to print it really big.\nWe can control these features with code chunk options.\nIn this section, we are going to talk more specifically about how to customise your figures.",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#overview",
    "href": "changing-figures.html#overview",
    "title": "9  Customising your figures",
    "section": "",
    "text": "Teaching 10 minutes\nExercises 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#questions",
    "href": "changing-figures.html#questions",
    "title": "9  Customising your figures",
    "section": "9.2 Questions",
    "text": "9.2 Questions\n\nHow do I change the height and width of a figure?\nHow to I change the type of output of a figure? (e.g., PDF, PNG, JPG, SVG)\nCan I set all the figure features globally?\nHow do I save the figures?",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#objectives",
    "href": "changing-figures.html#objectives",
    "title": "9  Customising your figures",
    "section": "9.3 Objectives",
    "text": "9.3 Objectives\n\nLearn how to set individual figure height, width, aspect, and print size\nLearn how to set global parameters for your chunks\nGet a copy of all of your figures",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#which-chunk-options-should-you-care-about-for-this",
    "href": "changing-figures.html#which-chunk-options-should-you-care-about-for-this",
    "title": "9  Customising your figures",
    "section": "9.4 Which chunk options should you care about for this?",
    "text": "9.4 Which chunk options should you care about for this?\nThere are many chunk options that control your output, but only a few that you really need to worry about for your figures:\n\nfig-align: How do you want your figure aligned? Takes one of the following inputs: “default”, “center”, “left”, or “right”? (demo)\nfig-cap: Would you like a caption for your figure? It takes a character vector as input: “My Amazing Graph”\nfig-height & fig-width: How tall and wide would you like your figure in inches? Each takes one number (e.g., 7, or 9) [Note: these numbers are not quoted]\n\n\nFor demonstration purposes, let’s take a plot from earlier and show how it’s output can change.\n\nwith fig-height, fig-width, fig-format:\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nOpen exercise exercises/02-qmd-figures-chunks/02-qmd-figures-chunks.qmd Create three figures, with the respective dimensions (fig-height and fig-width)\n\n2x2\n10x10\n4x7\n\nNow add to those figures, the following:\n\nfig-align = \"center\"\n\nNow change the output type to be “svg”",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#setting-global-options",
    "href": "changing-figures.html#setting-global-options",
    "title": "9  Customising your figures",
    "section": "9.5 Setting global options",
    "text": "9.5 Setting global options\nIf we repeat adding the same chunk options for each figure, we might want to consider setting them globally. We can do this by changing the options in the YAML:\n---\ntitle: \"02-qmd-figures-chunks\"\nauthor: \"Your Name\"\ndate: 2024/06/23\nformat: \n  html:\n    fig-height: 7\n    fig-width: 7\n    fig-format: png\n    fig-dpi: 300\n---\n\n\n\n\n\n\nYour Turn\n\n\n\n\nSet the global options in the “02-qmd-figures-chunks.qmd” document to set:\n\n\nfig-height\nfig-width\nfig-format\n\n\n\n\n\n\n\n\n\nDemo: Keeping your markdown\n\n\n\nYou can set the options for your figures, which will change how they appear on the page, but this won’t save the figures anywhere. In order to save the figures to file, you need to edit the YAML option keep-md: true:\n---\ntitle: \"Awesome report\"\nauthor: \"You\"\nformat: \n  html:\n    keep-md: true\n---",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#altering-where-figures-are-saved-to",
    "href": "changing-figures.html#altering-where-figures-are-saved-to",
    "title": "9  Customising your figures",
    "section": "9.6 Altering where figures are saved to",
    "text": "9.6 Altering where figures are saved to\nBy default, the figures are saved in a folder named after the file, e.g.,\n02-qmd-figures-chunks_files/figure-html\nIf you want to change this location, you can control the specific name of the folder by setting fig.path like so in the YAML\n---\ntitle: \"Awesome report\"\nauthor: \"You\"\nformat: \n  html:\n    keep-md: true\nknitr:\n  opts_chunk:\n    fig.path: folder/for/figures/prefix-\n---\nIf you do not want a prefix specified, you must end this part with a slash, e.g.,\n---\ntitle: \"Awesome report\"\nauthor: \"You\"\nformat: \n  html:\n    keep-md: true\nknitr:\n  opts_chunk:\n    fig.path: figures/\n---\n(reference: https://github.com/quarto-dev/quarto-cli/discussions/4254)\n\n\n\n\n\n\nYour Turn\n\n\n\n\nSave your images to a specific directory of your choice",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "changing-figures.html#further-reading",
    "href": "changing-figures.html#further-reading",
    "title": "9  Customising your figures",
    "section": "9.7 Further Reading",
    "text": "9.7 Further Reading\n\nOfficial Quarto documentation on figures\n\n\n\n\n\n\n\nManaging EPS/TIFF/Other multiple image formats\n\n\n\n\n\nUnfortunately (currently, as far as I can tell) in Quarto it seems you cannot save to other image formats such as “eps”, “tiff”, and cannot save to multiple formats at the same time.\nIf you would like to convert images to a specific format, you could try using code like the following.\n\nlibrary(magick)\nlibrary(fs)\n\n# List existing file paths matching \"png\" extension\nfigures_ls &lt;- dir_ls(\n  path = \"exercises/02-qmd-figures-chunks/02-qmd-figures-chunks_files/\",\n  recurse = TRUE,\n  glob = \"*.png\"\n  )\n\n# read images in\nlibrary(purrr)\nfigures &lt;- map(\n  figures_ls,\n  \\(x) image_read(path = x)\n)\n\n# create new paths with .TIFF extension\n# substitute out for another image format like \"bmp\", \"\nnew_paths &lt;- xfun::with_ext(figures_ls, \"tiff\")\n\n# write new images\nwalk2(\n  .x = figures,\n  .y = new_paths,\n  \\(x, y) image_write(image = x, path = y)\n)",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Customising your figures</span>"
    ]
  },
  {
    "objectID": "math.html",
    "href": "math.html",
    "title": "10  Math",
    "section": "",
    "text": "10.1 Overview\nWant to include equations in your writing? Easy. Quarto supports LaTeX style equation writing. This section introduces the two types equations, inline, and display form, as well as numbering equations.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "math.html#overview",
    "href": "math.html#overview",
    "title": "10  Math",
    "section": "",
    "text": "Teaching: 10 minutes\nExercises: 10 minutes",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "math.html#questions",
    "href": "math.html#questions",
    "title": "10  Math",
    "section": "10.2 Questions",
    "text": "10.2 Questions\n\nHow to I create an equation?\nLaTeX is funky, what are the basic math commands?\n\n\n\n\n\n\n\n\nSome History about LaTeX\n\n\n\n\n\nEquation editing was first made available in TeX, which later become LaTeX, named after Leslie Lamport.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "math.html#anatomy-of-equations",
    "href": "math.html#anatomy-of-equations",
    "title": "10  Math",
    "section": "10.3 Anatomy of Equations",
    "text": "10.3 Anatomy of Equations\nThis section shows you some basic equations types that you want to be familiar with.\nInline equations are referenced by a pair of dollar signs: $.\nSo this text would have an equation here: $E = mc^2$\nGenerates:\n\nSo this text would have an equation here: \\(E = mc^2\\)\n\nDisplay equations are referenced by two pairs of dollar signs:\n$$\nE = mc^2\n$$\nGives:\n\\[\nE = mc^2\n\\]\n\n10.3.0.1 Viewing equations\nUnderstanding whether or not you have created the right equation can be difficult. Rstudio provides previews of your equations in text (demo).",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "math.html#example-math-commands",
    "href": "math.html#example-math-commands",
    "title": "10  Math",
    "section": "10.4 Example math commands",
    "text": "10.4 Example math commands\nLaTeX is an amazing language, but understanding how to create the equations can be (more than) a bit confusing at times. This section demonstrates some example equations that you might be familiar with.\n\n10.4.0.1 Fractions\n\n\n$$\n\\frac{1}{2}\n$$\n\n\\[\n\\frac{1}{2}\n\\]\n\n\n\n\n10.4.0.2 Sub and Super Scripts\n\n\n$$\nY = X_1 + X_2\n$$\n\n\\[\nY = X_1 + X_2\n\\]\n\n\n\n\n$$\na^2 + b^2 = c^2\n$$\n\n\\[\na^2 + b^2 = c^2\n\\]\n\n\n\n\n10.4.0.3 Square roots\n\n\n$$\n\\sqrt{p}\n$$\n\n\\[\n\\sqrt{p}\n\\]\n\n\n\n\n$$\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n$$\n\n\\[\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n\\]\n\n\n\n\n10.4.0.4 Summations\n\n\n$$\n\\sum_{i = 1}^{n}{(\\bar{x} - x_i)^2}\n$$\n\n\\[\n\\sum_{i = 1}^{n}{(\\bar{x} - x_i)^2}\n\\]\n\n\n\n\n10.4.0.5 Bayes Rule\n\n\n$$\nPr(\\theta | y) = \\frac{Pr(y | \\theta) Pr(\\theta)}{Pr(y)}\n$$\n\n\\[\nPr(\\theta | y) = \\frac{Pr(y | \\theta) Pr(\\theta)}{Pr(y)}\n\\]\n\n\n\n\n$$\nPr(\\theta | y) \\propto Pr(y | \\theta) Pr(\\theta)\n$$\n\n\\[\nPr(\\theta | y) \\propto Pr(y | \\theta) Pr(\\theta)\n\\]\n\n\n\n\n10.4.0.6 Linear Model\n\n\n$$\nY \\sim X\\beta_0 + X\\beta_1 + \\epsilon\n$$\n\n\\[\nY \\sim X\\beta_0 + X\\beta_1 + \\epsilon\n\\]\n\n\n\n\n$$\n\\epsilon \\sim N(0,\\sigma^2)\n$$\n\n\\[\n\\epsilon \\sim N(0,\\sigma^2)\n\\]\n\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nAdd some math to your “02-qmd-figures-chunks.qmd” document",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "math.html#further-reading",
    "href": "math.html#further-reading",
    "title": "10  Math",
    "section": "10.5 Further Reading:",
    "text": "10.5 Further Reading:\nhttps://quarto.org/docs/visual-editor/technical.html#equations https://oeis.org/wiki/List_of_LaTeX_mathematical_symbols",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Math</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html",
    "href": "cite-fig-tab-sec.html",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "",
    "text": "11.1 Overview\nWhen you’re writing a report, you often refer to a table or figure in text.\nFigure 1. Life expectancy from 1952 - 2007 for Australia. Life expectancy increases steadily except from 1962 to 1969. We can safely say that our life expectancy is higher than it has ever been!\nAnd sure, this is figure 1…for now.\nBut what happens if actually, that figure should be moved later in the paper?\nYou need to do the following:\nThis is fine.\nOnce.\nBut it is never once. After this, it is frustrating, and error prone.\nThere is a way to solve this, using figure citations, which this lesson discusses.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#overview",
    "href": "cite-fig-tab-sec.html#overview",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "",
    "text": "Teaching 10 minutes\nExercises 15 minutes",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#questions",
    "href": "cite-fig-tab-sec.html#questions",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.2 Questions",
    "text": "11.2 Questions\n\nHow do I refer to the table or figure in text and link to it?",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#objectives",
    "href": "cite-fig-tab-sec.html#objectives",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.3 Objectives",
    "text": "11.3 Objectives\n\nLink to tables or figures in text.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#how-to-refer-to-tables-and-figures-in-text-demo",
    "href": "cite-fig-tab-sec.html#how-to-refer-to-tables-and-figures-in-text-demo",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.4 How to refer to tables and figures in text? (demo)",
    "text": "11.4 How to refer to tables and figures in text? (demo)\n\nTables are referenced in text with @tbl-label\nFigures are references in text with @fig-label\n\nImportantly here, for these two above examples to work, the things that they are referring to must have the exact label tbl-label and fig-label, respectively. That is, they must have the tbl or the fig part in there!\nSo, in order to use this referencing style, you must use specific labelling of your code chunks. For example, if you have some code like this:\n\n```{r}\n#| label: example-figure\nimage(volcano)\n```\n\n\n\n\n\n\n\n\nThen you cannot reference this figure in text - @example-figure does not work: (example-figure?). We get the error: “example-figure?”.\nIt would need to have a label like:\n\n```{r}\n#| label: fig-example\nimage(volcano)\n```\n\n\n\n\n\n\n\nFigure 11.1\n\n\n\n\n\nThen you can reference it with: @fig-example - Figure 11.1.\n\n\n\n\n\n\nHover your mouse on a figure!\n\n\n\nNote the awesome on-hover behaviour for hovering over a reference!\n\n\nAlso note that there are a variety of ways to specify the figure:\n\n@fig-example: Figure 11.1\n@Fig-example: Figure 11.1\n[Fig @fig-example]: Fig 11.1\n-@fig-example: Figure 11.1\n\n(reference here: https://quarto.org/docs/authoring/cross-references.html#references)\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing “03-qmd-lm-tables-inline-qmd”\n\nConvert your output to use fig prefixes to reference figures\n\n\n\n\n\n\n\n\n\n\nDemo\n\n\n\n\n```{r}\n#| label: fig-gg-oz\n#| fig-cap: Life expectancy from 1952 - 2007 for Australia. Life expectancy increases\n#|   steadily except from 1962 to 1969. We can safely say our life expectancy is\n#|   higher than it has ever been!\nlibrary(ggplot2)\nlibrary(dplyr)\ngapminder %&gt;%\n  filter(country == \"Australia\") %&gt;%\n  ggplot(aes(x = year,\n             y = lifeExp)) + \n  geom_point()\n```\n\n\n\n\n\n\n\nFigure 11.2: Life expectancy from 1952 - 2007 for Australia. Life expectancy increases steadily except from 1962 to 1969. We can safely say our life expectancy is higher than it has ever been!\n\n\n\n\n\nAustralia’s life expectancy has increased a great deal over the past 50 years (See Figure 11.2).\n\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing “03-qmd-lm-tables-inline-qmd”:\n\nAdd a new plot in your document and reference it",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#referencing-a-table",
    "href": "cite-fig-tab-sec.html#referencing-a-table",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.5 Referencing a table",
    "text": "11.5 Referencing a table\nTo cite a table, you write the following:\n@tbl-chunk-name\n\n```{r}\n#| label: tbl-gg-oz-tab\ngapminder %&gt;%\n  filter(country == \"Australia\") %&gt;%\n  knitr::kable(caption = \"Raw gapminder data for Australia.\")\n```\n\n\n\nTable 11.1: Raw gapminder data for Australia.\n\n\n\n\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAustralia\nOceania\n1952\n69.120\n8691212\n10039.60\n\n\nAustralia\nOceania\n1957\n70.330\n9712569\n10949.65\n\n\nAustralia\nOceania\n1962\n70.930\n10794968\n12217.23\n\n\nAustralia\nOceania\n1967\n71.100\n11872264\n14526.12\n\n\nAustralia\nOceania\n1972\n71.930\n13177000\n16788.63\n\n\nAustralia\nOceania\n1977\n73.490\n14074100\n18334.20\n\n\nAustralia\nOceania\n1982\n74.740\n15184200\n19477.01\n\n\nAustralia\nOceania\n1987\n76.320\n16257249\n21888.89\n\n\nAustralia\nOceania\n1992\n77.560\n17481977\n23424.77\n\n\nAustralia\nOceania\n1997\n78.830\n18565243\n26997.94\n\n\nAustralia\nOceania\n2002\n80.370\n19546792\n30687.75\n\n\nAustralia\nOceania\n2007\n81.235\n20434176\n34435.37\n\n\n\n\n\n\n\n\nSee above in Table ?tbl-tbl-gg-oz-tab.\nIf you want to move the caption location you can use tbl-cap-location: &lt;position&gt; to specify the location. By default it is the top.\n\n```{r}\n#| label: tbl-gg-oz-tab-bottom\n#| tbl-cap-location: bottom\ngapminder %&gt;%\n  filter(country == \"Australia\") %&gt;%\n  knitr::kable(caption = \"Raw gapminder data for Australia.\")\n```\n\n\n\n\n\n\n\ncountry\ncontinent\nyear\nlifeExp\npop\ngdpPercap\n\n\n\n\nAustralia\nOceania\n1952\n69.120\n8691212\n10039.60\n\n\nAustralia\nOceania\n1957\n70.330\n9712569\n10949.65\n\n\nAustralia\nOceania\n1962\n70.930\n10794968\n12217.23\n\n\nAustralia\nOceania\n1967\n71.100\n11872264\n14526.12\n\n\nAustralia\nOceania\n1972\n71.930\n13177000\n16788.63\n\n\nAustralia\nOceania\n1977\n73.490\n14074100\n18334.20\n\n\nAustralia\nOceania\n1982\n74.740\n15184200\n19477.01\n\n\nAustralia\nOceania\n1987\n76.320\n16257249\n21888.89\n\n\nAustralia\nOceania\n1992\n77.560\n17481977\n23424.77\n\n\nAustralia\nOceania\n1997\n78.830\n18565243\n26997.94\n\n\nAustralia\nOceania\n2002\n80.370\n19546792\n30687.75\n\n\nAustralia\nOceania\n2007\n81.235\n20434176\n34435.37\n\n\n\n\n\n\nTable 11.2: Raw gapminder data for Australia.\n\n\n\n\nReference: https://quarto.org/docs/authoring/cross-references.html#tables and https://quarto.org/docs/authoring/tables.html#caption-location",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#other-things-you-can-crossreference",
    "href": "cite-fig-tab-sec.html#other-things-you-can-crossreference",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.6 Other things you can cross/reference",
    "text": "11.6 Other things you can cross/reference\nYou can also reference theorems, code, proofs, and equations! See https://quarto.org/docs/authoring/cross-references.html#theorems-and-proofs for more details.\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing “03-qmd-lm-tables-inline-qmd”\n\nCreate a table in your document and refer to it in text",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "cite-fig-tab-sec.html#referencing-a-section",
    "href": "cite-fig-tab-sec.html#referencing-a-section",
    "title": "11  Citing Figures, Tables & Sections",
    "section": "11.7 Referencing a section",
    "text": "11.7 Referencing a section\nYou can even reference a section in your report: @sec-slug\nHowever, in order to write this, you need to include sec-slug in your markdown header, like so:\n## your amazing header {#sec-slug}\nYou must also include number-section in your YAML:\n---\ntitle: \"example\"\nnumber-sections: true\n---\nFor example, I can refer to the first section (Section Chapter 11) in this document by referring to the section as\n(Section @sec-start)\nbecause it was written as:\n# Citing Figures, Tables & Sections {#sec-start}\n\n\n\n\n\n\nDemo: Using visual mode\n\n\n\nVisual mode is this pretty neat feature, it’s best demonstrated live!\n\n\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing “03-qmd-lm-tables-inline-qmd”\n\nReference a section in the report.\n\nOpen up “04-qmd-global-opts-device.qmd” and work through the tasks there",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Citing Figures, Tables & Sections</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html",
    "href": "citations-and-styles.html",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "",
    "text": "12.1 Overview\nNow that you are near the end of your data analysis, you want to make sure that you’ve plugged in the gaps of REF1 REF2 and so on correctly cited the articles and software you wanted to mention.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#overview",
    "href": "citations-and-styles.html#overview",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "",
    "text": "Teaching\nExercises",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#questions",
    "href": "citations-and-styles.html#questions",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.2 Questions",
    "text": "12.2 Questions\n\nWhat sort of things can I cite?\nHow do I manage my .bib file?\nHow do I change the citation style?",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#objectives",
    "href": "citations-and-styles.html#objectives",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.3 Objectives",
    "text": "12.3 Objectives\n\nProvide a bibliography at the end of the document\nCite articles and packages during the document\nlearn how to manage citation styles",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#how-to-cite-things",
    "href": "citations-and-styles.html#how-to-cite-things",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.4 How to cite things",
    "text": "12.4 How to cite things\nCiting things in a Quarto document is straightforward, you refer to articles you want to cite using [@article-handle]. Here, article-handle matches the article handle in your .bib file.\nThis .bib file is referred to in the YAML of your document, under the option bibliography: filename.bib:\n---\ntitle: \nauthor:\noutput: html_document\nbibliography: references.bib\n---\n\n12.4.1 What is a .bib file?\nGood question.\n.bib is a format for storing references from the heyday of LaTeX. It contains plain text with reference information for the article. Here’s an example one:\n  @Book{ggplot2,\n    author = {Hadley Wickham},\n    title = {ggplot2: Elegant Graphics for Data Analysis},\n    publisher = {Springer-Verlag New York},\n    year = {2016},\n    isbn = {978-3-319-24277-4},\n    url = {http://ggplot2.org},\n  }\n\n\n12.4.2 And how do I generate these .bib files?\nYou can use the citation function in R for R itself, and for specific R packages.\nWe can get the citation for R with:\n\ncitation()\n\nTo cite R in publications use:\n\n  R Core Team (2025). _R: A Language and Environment for Statistical\n  Computing_. R Foundation for Statistical Computing, Vienna, Austria.\n  &lt;https://www.R-project.org/&gt;.\n\nA BibTeX entry for LaTeX users is\n\n  @Manual{,\n    title = {R: A Language and Environment for Statistical Computing},\n    author = {{R Core Team}},\n    organization = {R Foundation for Statistical Computing},\n    address = {Vienna, Austria},\n    year = {2025},\n    url = {https://www.R-project.org/},\n  }\n\nWe have invested a lot of time and effort in creating R, please cite it\nwhen using it for data analysis. See also 'citation(\"pkgname\")' for\nciting R packages.\n\n\nAnd for ggplot2 with\n\ncitation(\"ggplot2\")\n\nTo cite ggplot2 in publications, please use\n\n  H. Wickham. ggplot2: Elegant Graphics for Data Analysis.\n  Springer-Verlag New York, 2016.\n\nA BibTeX entry for LaTeX users is\n\n  @Book{,\n    author = {Hadley Wickham},\n    title = {ggplot2: Elegant Graphics for Data Analysis},\n    publisher = {Springer-Verlag New York},\n    year = {2016},\n    isbn = {978-3-319-24277-4},\n    url = {https://ggplot2.tidyverse.org},\n  }\n\n\nFor journals or books, you’ll need to get a specific .bib file. Yes, this can be a bit of a pain, but this is where you need to use a reference management software like Zotero, Mendeley, papers, or paperpile. The important thing to to use something. These all allow you to get .bib files of your articles, which you can then placec in your references.bib file.\n\n\n\n\n\n\nYour Turn\n\n\n\n\nUsing “05-qmd-bib-polish.qmd”\n\nGenerate a references.bib file to place your citations\nUsing the citation() function, generate citations for the packages we have used, “dplyr”, “ggplot2”, “gapminder”, and for the R software, place these in your references.bib file\nReference these in your document\nAdd a final heading in your file called #bibliography\nRender the document",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#how-to-change-the-bibliography-style",
    "href": "citations-and-styles.html#how-to-change-the-bibliography-style",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.5 How to change the bibliography style",
    "text": "12.5 How to change the bibliography style\nOK so now you’ve got your bibliography, but you now need to change it to a specific journal format. Luckily, this is now pretty easy. You can change your citation style from the citation style language\nSimilar to how you referred to your .bib file with bibliography: ref.bib, you do something similar:\n---\ntitle:\nauthor:\noutput: html_document\nbibliography: references.bib\ncsl: my_journal.csl\n---\n\n\n\n\n\n\nYour Turn\n\n\n\n\nselect your bibliography style to be one from your favourite journal at the CSL github repo here: https://github.com/citation-style-language/styles (&gt; 2,600 citations and counting)\nplace this in your rstudio project\nrefer to it in the YAML\nRender your document and observe your greatness",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#how-to-move-the-bibliography-location",
    "href": "citations-and-styles.html#how-to-move-the-bibliography-location",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.6 How to move the bibliography location",
    "text": "12.6 How to move the bibliography location\nThe bibliography is typically placed at the end of the document, so your last heading should be something like # References. However, if you want to move it, place the following piece of text in the reference section. For example.\n# Introduction\n\n# References\n\n::: {#refs}\n:::\n\n# Appendix\nThis is taken from this section of the Quarto documentation. Note they also state:\n\nIf your bibliography is being generated using BibLaTeX or natbib…the bibliography will always appear at the end of the document and the #refs div will be ignored.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "citations-and-styles.html#how-to-not-print-suppress-the-bibliography",
    "href": "citations-and-styles.html#how-to-not-print-suppress-the-bibliography",
    "title": "12  Citing Articles & Bibliography Styles",
    "section": "12.7 How to not print / suppress the bibliography?",
    "text": "12.7 How to not print / suppress the bibliography?\nThe bibliography can be suppressed with the YAML option suppress-bibliography\ntitle: \"document\"\noutput: html\nbibliography: file.bib\nsuppress-bibliography: true\n\n\n\n\n\n\nYour Turn\n\n\n\n\nGenerate a bibliography and an appendix that follows it\n\n\n\n\n\n\n\n\n\nDemo: Use the Visual Editor mode of RStudio\n\n\n\nShow off the citation auto-complete magic!\n\nsearch for DOIs\nsearch for R packages\nsearch pubmed/datacite/more!",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Citing Articles & Bibliography Styles</span>"
    ]
  },
  {
    "objectID": "caption-reference-eqn.html",
    "href": "caption-reference-eqn.html",
    "title": "13  Captioning and referencing equations",
    "section": "",
    "text": "13.1 Overview\nThis section introduces how to add captions to equations, and reference them in text.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Captioning and referencing equations</span>"
    ]
  },
  {
    "objectID": "caption-reference-eqn.html#overview",
    "href": "caption-reference-eqn.html#overview",
    "title": "13  Captioning and referencing equations",
    "section": "",
    "text": "Teaching: 5 minutes\nExercises: 5 minutes",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Captioning and referencing equations</span>"
    ]
  },
  {
    "objectID": "caption-reference-eqn.html#questions",
    "href": "caption-reference-eqn.html#questions",
    "title": "13  Captioning and referencing equations",
    "section": "13.2 Questions",
    "text": "13.2 Questions\n\nHow do I caption an equation?\nHow do I reference an equation?\n\n\n13.2.1 Numbering equations\nYou can make reference an equation by adding a label starting with #eq- after the equation $$. For example:\n$$\nY \\sim X\\beta_0 + X\\beta_1 + \\epsilon\n$$ {#eq-linear}\nGives\n\\[\nY \\sim X\\beta_0 + X\\beta_1 + \\epsilon\n\\tag{13.1}\\]\nYou can then refer to the equation in text using @eq-linear:\n\nOur model is given in Equation 13.1.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Captioning and referencing equations</span>"
    ]
  },
  {
    "objectID": "caption-reference-eqn.html#other-equation-adjacent-referencing",
    "href": "caption-reference-eqn.html#other-equation-adjacent-referencing",
    "title": "13  Captioning and referencing equations",
    "section": "13.3 Other equation-adjacent referencing",
    "text": "13.3 Other equation-adjacent referencing\nYou can also use and reference theorems, lemmas, conjectures, and many more - to see these, see the Quarto documentation: theorems and proofs documentation.",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Captioning and referencing equations</span>"
    ]
  },
  {
    "objectID": "common-problems.html",
    "href": "common-problems.html",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "",
    "text": "14.1 More practice?\nThere are some things that I run into fairly frequently (and some not so much) when I’m rendering my Quarto documents. This section details some the common problems, and the solution that I have found works for me.\nIf you want to practice fixing broken Quarto documents, check out some pathologically broken examples on github at github.com/njtierney/qmd-errors.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#avoiding-problems",
    "href": "common-problems.html#avoiding-problems",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.2 Avoiding problems",
    "text": "14.2 Avoiding problems\nTo avoid problems in the first place, I try and do the following:\n\nDevelop code in chunks and execute the chunks until they work, then move on.\nRender the document regularly to check for errors.\n\nThen, if there is an error:\n\nRecreate the error in an interactive session:\n\nrestart R\nrun all chunks below\nfind the chunk that did not work, fix until it does\nrun all chunks below\nexplore working directory issues\n\nremember that the Quarto directory is where the .qmd file lives",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#the-errors",
    "href": "common-problems.html#the-errors",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.3 The errors",
    "text": "14.3 The errors\nWhat follows from here are all the errors you might in an Quarto document, with the following structure:\n\nWhat they might look like\nWhat the error message might appear to be, and\nHow to solve them",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#python-not-found",
    "href": "common-problems.html#python-not-found",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.4 Python not found",
    "text": "14.4 Python not found\nAn error like:\nError:\n! /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/config-3.7m-darwin/libpython3.7.dylib - dlopen(/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/config-3.7m-darwin/libpython3.7.dylib, 0x000A): tried: '/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/config-3.7m-darwin/libpython3.7.dylib' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/config-3.7m-darwin/libpython3.7.dylib' (no such file), '/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/config-3.7m-darwin/libpython3.7.dylib' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/Library/Frameworks/Python.framework/Versions/3.7/Python' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Library/Frameworks/Python.framework/Versions/3.7/Python' (no such file), '/Library/Frameworks/Python.framework/Versions/3.7/Python' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Library/Frameworks/Python.framework/Versions/3.7/Python' (no such file, not in dyld cache)\n\nBacktrace:\n  1. global .main()\n  2. execute(...)\n  3. rmarkdown::render(...)\n  4. knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)\n  5. knitr:::process_file(text, output)\n     ...\n 17. reticulate:::initialize_python()\n 18. base::tryCatch(...)\n 19. base (local) tryCatchList(expr, classes, parentenv, handlers)\n 20. base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 21. value[[3L]](cond)\nThis error went away when I installed python - I went to https://www.python.org/downloads/ and followed the prompts",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#no-julia",
    "href": "common-problems.html#no-julia",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.5 No julia",
    "text": "14.5 No julia\nError in `loadNamespace()`:\n! there is no package called 'JuliaCall'\nBacktrace:\n  1. global .main()\n 14. base::loadNamespace(x)\n 15. base::withRestarts(stop(cond), retry_loadNamespace = function() NULL)\n 16. base (local) withOneRestart(expr, restarts[[1L]])\n 17. base (local) doWithOneRestart(return(expr), restart)\nFix: Install JuliaCall R package:\ninstall.packages(\"JuliaCall\")",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#duplication-duplicated-chunk-names",
    "href": "common-problems.html#duplication-duplicated-chunk-names",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.6 “Duplication”: Duplicated chunk names",
    "text": "14.6 “Duplication”: Duplicated chunk names\nWhat it might look like\nChunks like this:\n\n```{r}\n#| label: repeated\n1+1\n```\n\n```{r}\n#| label: repeated\n2+2\n```\n\nThe error message\nThis is caught before the document compiles with a warning like:\nprocessing file: duplicated-chunk-names.qmd\nError in parse_block(g[-1], g[1], params.src, markdown_mode) : \n  Duplicate chunk label 'repeated', which has been used for the chunk:\n1+1\nCalls: .main ... process_file -&gt; split_file -&gt; lapply -&gt; FUN -&gt; parse_block\nExecution halted\nThe important part to note is the start:\n.\n.\n.\nDuplicate chunk label 'repeated', which has been used for the chunk:\n1+1\n.\n.\n.\nHow to solve\n\nIn our case we have the same chunk name twice: ‘repeated’. Change the chunk name of one of them!",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#not-what-i-ordered-objects-not-created-in-the-right-order",
    "href": "common-problems.html#not-what-i-ordered-objects-not-created-in-the-right-order",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.7 “Not what I ordered”: Objects not created in the right order",
    "text": "14.7 “Not what I ordered”: Objects not created in the right order\nWhat it might look like\nplot(my_table)\n\nmy_table &lt;- table(mtcars$cyl)\nThe error message\nprocessing file: wrong-order.qmd\n  |......................................                   |  67% [plot-table]Error:\n! object 'my_table' not found\nBacktrace:\n 1. base::plot(my_table)\n\n\n\nQuitting from lines 8-12 [plot-table] (wrong-order.qmd)\nHow to solve\nThere is a good clue at the end of this message here, stating:\n.\n.\nQuitting from lines 8-12 [plot-table] (wrong-order.qmd)\n.\n.\nThe template here is:\nQuitting from lines START-END [CHUNK LABEL] (QUARTO-DOCUMENT-NAME.qmd)\nI would then navigate to those lines of code in the Quarto document, or search for the chunk label, and see if I can run that code interactively. A common problem with these kinds of errors is that they just might work interactively, because you might have run them out of sequence. However because a Quarto document goes from a fresh R session and runs the code from the top to the bottom in that order, the objects might not yet exist. So:\n\nRestart R - ensure it is a clean session without objects from the previous session hanging around\nRun code above the problem chunk\nRun code in the problem chunk\nHopefully this reproduces your error\nIf it doesn’t reproduce your error, consider trying to make a small reprex of the problem so you have try and figure out the bug.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#forgotten-trails-i-missing-or",
    "href": "common-problems.html#forgotten-trails-i-missing-or",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.8 Forgotten Trails I: Missing “(”, or “}”",
    "text": "14.8 Forgotten Trails I: Missing “(”, or “}”\nWhat it might look like\n\n```{r}\n#| label: fig-volcano\n#| eval: false\nimage(volcano\n```\n\nThe error message\nprocessing file: forgotten-trails-i.qmd\n  |.....................................                   |  67% [fig-volcano]Error in `parse()`:\n! &lt;text&gt;:2:0: unexpected end of input\n1: image(volcano\n   ^\nBacktrace:\n  1. global .main()\n  2. execute(...)\n  3. rmarkdown::render(...)\n  4. knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)\n  5. knitr:::process_file(text, output)\n     ...\n 11. knitr:::eng_r(options)\n 14. knitr (local) evaluate(...)\n 15. evaluate::evaluate(...)\n 17. evaluate:::parse_all.character(...)\n 18. base::parse(text = x, srcfile = src)\n                                                                                                        \n\n\nQuitting from lines 7-9 [fig-volcano] (forgotten-trails-i.qmd)\n\nExecution halted\nHow to solve\nIn this case the key part to look at is\n|.....................................                   |  67% [fig-volcano]Error in `parse()`:\n! &lt;text&gt;:2:0: unexpected end of input\n1: image(volcano\n   ^\nHere the error message even points to the image code, and the message, “unexpected end of input” is referring to the missing closing parenthesis.\nWhat it might look like\n\n```{r\n#| label: fig-volcano\nimage(volcano)\n```\n\nThe error message\nThere is no error message here, but your output might look like this:\n\nForgotten Trails I: Missing “(”, or “}”\n{r #| label: fig-volcano image(volcano)\nHow to solve\nThe clue here for me is that we are getting this part of the code:\n{r #| label: fig-volcano image(volcano)\nWhen we would normally not see any information about the code chunk option, #| label.\nWhen you come across some funky looking text like that, look for a missing }.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#forgotten-trails-ii-chunk-option-with-trailing-or-not-input",
    "href": "common-problems.html#forgotten-trails-ii-chunk-option-with-trailing-or-not-input",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.9 “Forgotten Trails II”: Chunk option with trailing “, or not input",
    "text": "14.9 “Forgotten Trails II”: Chunk option with trailing “, or not input\nWhat it might look like\n\nThe error message\nERROR: YAMLException: unexpected end of the stream within a double quoted scalar (forgotten-trails-ii.qmd, 8:188)\n7: #| label: fig-volcano\n8: #| fig-cap: \"An elevation plot of Maunga Whau (Mt Eden). Darker colours indicate higher parts of the volcano. We see one main peak on the left, followed by two smaller peaks on the right.\n                                                                                                                                                                                             ~\n9: image(volcano)\nHow to solve it?\n\nThe clue here is unexpected end of the stream within a double quoted scalar. Which, although it might sound a bit obtuse, is referring to a missing quote. The other clue is that the error captures the code chunk information and prints it out to the console.\nWhen you are working with this code in RStudio it also highlights the error:",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#the-path-not-taken-file-path-incorrect",
    "href": "common-problems.html#the-path-not-taken-file-path-incorrect",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.10 “The Path Not Taken” File path incorrect",
    "text": "14.10 “The Path Not Taken” File path incorrect\nWhat it might look like\n\n```{r}\n#| label: read-data\n#| echo: fenced\n#| eval: false\nlibrary(readr)\npenguins &lt;- read_csv(\"the_penguins.csv\")\n```\n\nThe error message\nprocessing file: path-not-taken.qmd\n  |.......................................                   |  67% [read-data]Error:\n! 'the_penguins.csv' does not exist in current working directory ('/Users/nick/github/njtierney/qmd-errors').\nBacktrace:\n 1. readr::read_csv(\"the_penguins.csv\")\n 4. vroom (local) `&lt;fn&gt;`(\"the_penguins.csv\")\n 5. vroom:::check_path(path)\n                                                                                                      \n\n\nQuitting from lines 7-10 [read-data] (path-not-taken.qmd)\n\nExecution halted\nHow to solve\nThe key part to pay attention to here is:\nError:! 'the_penguins.csv' does not exist in current working directory ('/Users/nick/github/njtierney/qmd-errors').\nIn this case, we need to ensure that the data file is in the right spot - in our example we have a typo - the data should be “data/penguins.csv”.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#spolling-i-incorrectly-spelled-chunk-options",
    "href": "common-problems.html#spolling-i-incorrectly-spelled-chunk-options",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.11 “Spolling I” Incorrectly spelled chunk options",
    "text": "14.11 “Spolling I” Incorrectly spelled chunk options\nThese are often not an error, but you just won’t get the behaviour that you expect.\nWhat it might look like\n\n```{r}\n#| label: fig-penguins\n#| fig-caption: \"Penguin Bill Length against Flipper Length. coloured by species. Each dot represents the bill length and flipper length of a penguin, coloured by species (Adelie, Chinstrap, Gentoo), and facetted by the three islands (Biscoe, Dream, Torgensen). We learn that not all three species are present on all islands, only Adelie is present on each. Adelie generally has the smallest flipper and bill length of the penguins, with chinstrap and gentoo being similar. Flipper length is correlated with bill length.\"\n#| echo: fenced\nlibrary(palmerpenguins)\nlibrary(ggplot2)\nggplot(penguins,\n       aes(x = flipper_length_mm,\n           y = bill_length_mm,\n           colour = species)) + \n  geom_point() + \n  scale_color_brewer(palette = \"Dark2\") +\n  theme_minimal() + \n  facet_wrap(~island)\n```\n\n\nAbove we have @fig-counts...\n\nIn this case we do not get a rendered caption at all:\n\nThe root cause of this is that we have specified fig-caption instead of fig-cap.\nThis once caused me to rewrite a lot of code and an entire section of a paper until I realised the problem.\nThe error message\nThere is no error message for this! It is a silent error.\nHow to solve\nYou can resolve this issue by using fig-cap instead of fig-caption.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#spolling-ii-incorrectly-spelled-chunk-option-inputs",
    "href": "common-problems.html#spolling-ii-incorrectly-spelled-chunk-option-inputs",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.12 “Spolling II” Incorrectly spelled chunk option inputs",
    "text": "14.12 “Spolling II” Incorrectly spelled chunk option inputs\nSo this is when you provide the wrong input to your chunk options. Like something that requires true gets “yes”, or something that needs \"100%\" instead gets 100\nWhat it might look like\n\nThe error message\n==&gt; quarto preview spolling-ii.qmd --to html --no-watch-inputs --no-browse\n\n(line 8, columns 11--14) Field \"cache\" has value yes, which must instead be `true` or `false`\n\n✖ The value yes is a string.\nℹ The error happened in location cache.\nℹ Quarto uses YAML 1.2, which interprets booleans strictly.\nℹ Try using true instead.\n\nERROR: Validation of YAML cell metadata failed.\nERROR: Render failed due to invalid YAML.\nHow to solve\nThere’s a bit of text here, but the key piece is:\n(line 8, columns 11--14) Field \"cache\" has value yes, which must instead be `true` or `false`\nWe have specified #| cache: yes instead of #| cache: true. A good thing to internalise here is that Quarto always uses lowercase true or false and never yes or no.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#the-legend-of-link-i-your-images-in-dont-work.",
    "href": "common-problems.html#the-legend-of-link-i-your-images-in-dont-work.",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.13 “The Legend of Link I”: Your images in ![]() don’t work.",
    "text": "14.13 “The Legend of Link I”: Your images in ![]() don’t work.\nI often forget that it is ![](path/to/image), and not ![](\"path/to/image\"). There are no quote marks!",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#latex-errors",
    "href": "common-problems.html#latex-errors",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.14 LaTeX errors",
    "text": "14.14 LaTeX errors\nThere is no panacea for LaTeX errors, but if you aren’t familiar with “what that error message” might look like, here are some details.\nWhat it might look like\nThe error message\nHow to solve",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#i-want-to-include-inline-r-code-verbatim-to-show-an-example",
    "href": "common-problems.html#i-want-to-include-inline-r-code-verbatim-to-show-an-example",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.15 I want to include inline R code verbatim to show an example",
    "text": "14.15 I want to include inline R code verbatim to show an example\n… Like for a book on using Quarto or something.\nYou can use the chunk option echo: fenced. See the Quarto documentation on fenced echo for more details.\n\n\n\n\n\n\nTip\n\n\n\nBack before we had this option we used to have to do things like this:\nblog post by T. Hovorka from R Views\nIt boils down to this:\n r \"\\u0060r expression\\u0060\" .\nThankfully the folks at Quarto have made this much easier!",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "common-problems.html#my-figure-or-table-isnt-being-cited",
    "href": "common-problems.html#my-figure-or-table-isnt-being-cited",
    "title": "14  Common Problems with Quarto (and some solutions)",
    "section": "14.16 My Figure or Table isn’t being cited",
    "text": "14.16 My Figure or Table isn’t being cited\nWhat it might look like\nYou create a figure,\nThe error message\nThere isn’t one - you just get @fig-chunk-name printed.\nHow to solve\nYou need to make sure that you actually print the table or plot. If you create the plot and save it, but do not print it in the document, then you will not be able to reference the plot or table.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Common Problems with Quarto (and some solutions)</span>"
    ]
  },
  {
    "objectID": "alternative-outputs-and-exts.html",
    "href": "alternative-outputs-and-exts.html",
    "title": "15  Different Outputs and Extensions",
    "section": "",
    "text": "15.1 Alternative output formats\nThere are many different outputs for Quarto - as a start, THIS VERY BOOK IS WRITTEN IN QUARTO! How cool is that? I think it’s pretty cool.\nWhat’s especially great is that the extra barriers to moving from one format to another are relatively low. Generally speaking, the things that you will change in your overall setup are:\nThere are some small differences in how files are setup, but by and large the work that you need to do will be on the writing of the content, and your code. Which is good! That’s where we want out focus to be.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Different Outputs and Extensions</span>"
    ]
  },
  {
    "objectID": "alternative-outputs-and-exts.html#alternative-output-formats",
    "href": "alternative-outputs-and-exts.html#alternative-output-formats",
    "title": "15  Different Outputs and Extensions",
    "section": "",
    "text": "Write a book\nBuild a website\nCreate a simple dashboard\nUse shiny with Quarto\nGenerate multiple reports with parameterised reports - blog post by Mike Mahoney, blog post by Mandy Norrbo\ntypst (like a next-generation LaTeX - still new.)\n\n\n15.1.1 Slideshows / Presentations\n\nHTML: revealjs\nPDF: beamer\npowerpoint\n\n\n\n15.1.2 Quarto Manuscripts\nQuarto manuscripts are a relatively new feature in quarto. They essentially help you share a bundled folder with the journal document, the rendered code, and other bits and pieces. In a future version of this book I will discuss using these in your writing.\n\n\n15.1.3 Quarto Extensions\nQuarto has an official extensions API, you can see all their extensions on their extensions page. Perhaps the most relevant is the journal extensions page, which I discuss below. For more information on creating extensions, see their creating extensions page.\n\n15.1.3.1 For Journals\nQuarto has provided a substantial list of supported journal formats in the journal listings Quarto extensions page. This is similar to rticles in rmarkdown.\n\n\n15.1.3.2 Other extensions\nOther formats and extensions for PDF, for example, the hikmah.pdf extension by Andrew Heiss.\nThese can be found at the Quarto Custom Formats Page.",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Different Outputs and Extensions</span>"
    ]
  },
  {
    "objectID": "next-steps.html",
    "href": "next-steps.html",
    "title": "16  Next Steps",
    "section": "",
    "text": "16.1 Learn how to use git and github\nSo now you’ve got a handle on Quarto, what are some of the other things to think about learning? Here are some of my recommendations.\ngit is a version control system. Not sure what a version control system is? No worries, let me explain. If you’ve ever named a document something like:\nRelevant PhD comics link\nOr even if you have something like:\nThese are ways of managing which version you have.\nTo learn git and github, I’d highly recommend Happy Git with R by Jenny Bryan, the STAT 545 TAs, and Jim Hester",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Next Steps</span>"
    ]
  },
  {
    "objectID": "next-steps.html#learn-how-to-use-git-and-github",
    "href": "next-steps.html#learn-how-to-use-git-and-github",
    "title": "16  Next Steps",
    "section": "",
    "text": "Final\nFinal 2\nReally final\n\n\n\n2018-10-10-document.qmd\n2018-10-11-document.qmd",
    "crumbs": [
      "<span class='chapter-number'>16</span>  <span class='chapter-title'>Next Steps</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "17  References",
    "section": "",
    "text": "Quarto website\nThe Posit cheatsheet\nR For Data Science section on Quarto\nExtending word templates: https://quarto.org/docs/output-formats/ms-word-templates.html\nhappy git with r",
    "crumbs": [
      "<span class='chapter-number'>17</span>  <span class='chapter-title'>References</span>"
    ]
  },
  {
    "objectID": "acknowledgements.html",
    "href": "acknowledgements.html",
    "title": "18  Acknowledgements",
    "section": "",
    "text": "This books was first written to be a guide for a course run by the Statistics Society Australia (SSA), and Melbourne Integrative Genomics (MIG) on November 12, 2018. Initially written as “Rmarkdown for Scientists”, “Quarto for Scientists” takes the same format and makes it about Quarto.\nI’d like to first thank Miles McBain, for his working book, “Git For Scientists”. This book inspired the structure and workflow of this existing book.\nI’d also like to thank Karthik Ram, Yoav Ram, Martin Fenner, Puneet Kishor, and Jonathan Dugan, involved with the Scholarly Markdown site. This has helped inform some of the structure of this book. I’d also like to thank Patrick Robotham for his helpful discussions when first creating this book.\nThere have been various wonderful contributions from the community to fix typos in this book, I would like to thank Allison Presmanes Hill PR1, PR2, as well as the many offline helpful conversations about serving this book online and other matters. I’d also like to thank Murray Cadzow PR, and Federico Marini PR, and Raymond B Huey for their thoughtful contributions.",
    "crumbs": [
      "<span class='chapter-number'>18</span>  <span class='chapter-title'>Acknowledgements</span>"
    ]
  },
  {
    "objectID": "appendix-visual-vs-source-mode.html",
    "href": "appendix-visual-vs-source-mode.html",
    "title": "Appendix A — Visual mode",
    "section": "",
    "text": "This section will be best demonstrated live in the course.\nBut needless to say, some things worth checking out:\n\nciting papers in a linked .bib file\ninsert anything shortcut\ninsert table\n\nWarn against potential issues that may arise due to text changes from swapping to visual model\nThere is also a VS Code extension for visual mode, which this book does not (currently) focus on.\n\nB Using Zotero with Quarto\nhttps://quarto.org/docs/visual-editor/technical.html#citations-from-zotero",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Visual mode</span>"
    ]
  },
  {
    "objectID": "appendix-template.html",
    "href": "appendix-template.html",
    "title": "Appendix B — Templates",
    "section": "",
    "text": "B.1 Controlling the outputs\nDepending on the output type, HTML, PDF, or word, you can actually control how the document looks",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Templates</span>"
    ]
  },
  {
    "objectID": "appendix-template.html#controlling-the-outputs",
    "href": "appendix-template.html#controlling-the-outputs",
    "title": "Appendix B — Templates",
    "section": "",
    "text": "B.1.1 Options for HTML\nSome common options for HTML include:\n\nAdding tab sets\nfloating table of contents\n\n\n\nB.1.2 Options for PDF\n\nAdding page breaks\ninjecting LaTeX into your Quarto document\n\n\n\nB.1.3 Options for Word\n\ntemplates using .doct files",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Templates</span>"
    ]
  },
  {
    "objectID": "appendix-template.html#how-do-i-set-options-specific-to-each-output",
    "href": "appendix-template.html#how-do-i-set-options-specific-to-each-output",
    "title": "Appendix B — Templates",
    "section": "B.2 How do I set options specific to each output",
    "text": "B.2 How do I set options specific to each output\nSometimes you might want to have specific output changes to",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Templates</span>"
    ]
  },
  {
    "objectID": "appendix-faq.html",
    "href": "appendix-faq.html",
    "title": "Appendix C — FAQ",
    "section": "",
    "text": "C.1 How can I include a screenshot of an interactive graphic in PDF or Word?\n( A place for questions)\nYou might wish to include a screenshot of an interactive graphic you had in your HTML document. To do this, you can use the webshot2 package",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>FAQ</span>"
    ]
  },
  {
    "objectID": "appendix-html-extensions.html",
    "href": "appendix-html-extensions.html",
    "title": "Appendix D — HTML document extensions",
    "section": "",
    "text": "Some common options for HTML include:\n\nAdding tab sets\nfloating table of contents\n\n\nD.0.1 Adding Tab sets\nA tab set looks like the following:\n\n## Example tab set {.tabset}\n\n### Tab 1\n\n&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sed eleifend velit. Sed porta pulvinar lorem ut rutrum. Etiam quis cursus libero. Donec nibh nisl, auctor quis sem in, feugiat convallis odio. Ut at euismod ligula. Nullam vitae quam non lacus scelerisque tempus. Sed tincidunt massa non nunc tincidunt feugiat. In hac habitasse platea dictumst.\n\n### Tab 2\n\n```{r}\n#| label: tab-plot\nplot(iris$Sepal.Length, iris$Sepal.Width)\n```\n\nTo add a tab set, you include {.tabset} after your heading\n\n\nD.0.2 Floating table of contents\nA floating table of contents can be added with the following lines in the YAML header:\n---\ntitle: \"Your title\"\nauthor: \"Your name\"\noutput: \n  html_document:\n    toc: true\n    toc_float: true\n---\n\n\n\n\n\n\nYour Turn\n\n\n\n\nAdd tab sets to your document\nAdd a floating table of contents",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>D</span>  <span class='chapter-title'>HTML document extensions</span>"
    ]
  }
]